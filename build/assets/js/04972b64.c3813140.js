"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[409],{7496:function(n){n.exports=JSON.parse('{"blogPosts":[{"id":"npm1","metadata":{"permalink":"/metaTrip/build/blog/npm1","source":"@site/blog/2022-12-27-npm.mdx","title":"npm \u5feb\u6377\u952e","description":"- \u8fd9\u7bc7blog\u662f\u5bf9npm\u5e38\u7528\u547d\u4ee4\u7684\u4e00\u4e9b\u603b\u7ed3\uff0c\u4f1a\u6301\u7eed\u66f4\u65b0","date":"2022-12-27T00:00:00.000Z","formattedDate":"December 27, 2022","tags":[{"label":"npm","permalink":"/metaTrip/build/blog/tags/npm"}],"readingTime":1.035,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"nextItem":{"title":"vscode \u5feb\u6377\u952e","permalink":"/metaTrip/build/blog/vscode1"}},"content":":::tip\\r\\n- \u8fd9\u7bc7blog\u662f\u5bf9npm\u5e38\u7528\u547d\u4ee4\u7684\u4e00\u4e9b\u603b\u7ed3\uff0c\u4f1a\u6301\u7eed\u66f4\u65b0 \\r\\n:::\\r\\n\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## 1. \u5e38\u7528\u547d\u4ee4\\r\\n\\r\\n\u547d\u4ee4 | \u63cf\u8ff0\\r\\n--|--\\r\\nnpm cache clean --force | clean npm cache\\r\\nnpm rm -rf node_modules && rm package-lock.json | \u5220\u9664node node_modules\u6587\u4ef6\u5939\u4ee5\u53calock\u6587\u4ef6\\r\\nnpm list | \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e0b\u5df2\u5b89\u88c5\u7684node\u5305\\r\\nnpm list -g | \u67e5\u770b\u5168\u5c40\u5df2\u7ecf\u5b89\u88c5\u8fc7\u7684node\u5305\\r\\nnpm config get prefix | \u67e5\u770b\u5168\u5c40\u5b89\u88c5\u8def\u5f84\\r\\nnpm info | \u6307\u5b9a\u5305\u540d : \u67e5\u770b\u8fdc\u7a0bnpm\u4e0a\u6307\u5b9a\u5305\u7684\u6240\u6709\u7248\u672c\u4fe1\u606f\\r\\nnpm root | \u67e5\u770b\u5f53\u524d\u5305\u7684\u5b89\u88c5\u8def\u5f84\\r\\nnpm root -g | \u67e5\u770b\u5168\u5c40\u7684\u5305\u7684\u5b89\u88c5\u8def\u5f84\\r\\nnpm ls \u5305\u540d | \u67e5\u770b\u672c\u5730\u5b89\u88c5\u7684\u6307\u5b9a\u5305\u53ca\u7248\u672c\u4fe1\u606f\uff0c\u6ca1\u6709\u663e\u793aempty\\r\\nnpm ls\u5305\u540d -g | \u67e5\u770b\u5168\u5c40\u5b89\u88c5\u7684\u6307\u5b9a\u5305\u53ca\u7248\u672c\u4fe1\u606f\uff0c\u6ca1\u6709\u663e\u793aempty"},{"id":"vscode1","metadata":{"permalink":"/metaTrip/build/blog/vscode1","source":"@site/blog/2022-12-27-vscode.mdx","title":"vscode \u5feb\u6377\u952e","description":"- \u8fd9\u7bc7blog\u662f\u5bf9vscode\u5e38\u7528\u529f\u80fd\u4ee5\u53ca\u5feb\u6377\u952e\u7684\u4e00\u4e9b\u603b\u7ed3\uff0c\u4f1a\u6301\u7eed\u66f4\u65b0","date":"2022-12-27T00:00:00.000Z","formattedDate":"December 27, 2022","tags":[{"label":"vscode","permalink":"/metaTrip/build/blog/tags/vscode"}],"readingTime":1.325,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"npm \u5feb\u6377\u952e","permalink":"/metaTrip/build/blog/npm1"},"nextItem":{"title":"useMemo and useCallback, you really know it?","permalink":"/metaTrip/build/blog/react2"}},"content":":::tip\\r\\n- \u8fd9\u7bc7blog\u662f\u5bf9vscode\u5e38\u7528\u529f\u80fd\u4ee5\u53ca\u5feb\u6377\u952e\u7684\u4e00\u4e9b\u603b\u7ed3\uff0c\u4f1a\u6301\u7eed\u66f4\u65b0 \\r\\n:::\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## 1. typescript\u7248\u672c\u9009\u62e9\\r\\n\\r\\n\u627e\u5230vscode\u4e2d\u7684ts/tsx\u6587\u4ef6\uff0c\u53f3\u4e0b\u89d2\u6709typescript\u5f53\u524d\u7248\u672c\\r\\n\\r\\n<img src=\\"/metaTrip/build/img/blog/vs1.png\\" alt=\\"\\" style={{width: \'100%\'}}/>\\r\\n\\r\\n\u70b9\u51fb\u9009\u62e9typescript version\\r\\n\\r\\n<img src=\\"/metaTrip/build/img/blog/vs2.png\\" alt=\\"\\" style={{width: \'100%\'}}/>\\r\\n\\r\\n\u4ece\u4e2d\u8fdb\u884c\u9009\u62e9\\r\\n\\r\\n<img src=\\"/metaTrip/build/img/blog/vs3.png\\" alt=\\"\\" style={{width: \'100%\'}}/>\\r\\n\\r\\n\u5728terminal\u4e2drun npx tsc -v \u67e5\u770b\u7248\u672c\uff0c\u8fd9\u4e2a\u7248\u672c\u662f\u5f53\u524d\u9879\u76eenode_module\u4e2dtypescript\u7684\u7248\u672c\\r\\n\u5982\u679c\u662f\u5168\u5c40\u4e0b\uff0c\u5c31\u662f\u5168\u5c40\u5b89\u88c5\u7684\u7248\u672c\\r\\n\\r\\n<img src=\\"/metaTrip/build/img/blog/vs4.png\\" alt=\\"\\" style={{width: \'100%\'}}/>\\r\\n\\r\\n\\r\\n## 2. \u5feb\u6377\u952e\\r\\n\\r\\n\\r\\n\u64cd\u4f5c | \u63cf\u8ff0\\r\\n--|--\\r\\nctrl + ` | \u6253\u5f00\u6216\u5173\u95edterminal\\r\\nctrl + enter | \u5411\u4e0b\u91cd\u5f00\u4e00\u884c\uff1b\\r\\nctrl+shift + enter | \u5219\u662f\u5728\u4e0a\u4e00\u884c\u91cd\u5f00\u4e00\u884c\\r\\nctrl + x | \u526a\u5207\u4e00\u884c \\r\\nctrl +shift + k | \u76f4\u63a5\u5220\u9664\u4e00\u884c\\r\\nalt + \u2191 | \u5411\u4e0a\u79fb\u52a8\u4e00\u884c\\r\\nalt + \u2193 | \u5411\u4e0b\u79fb\u52a8\u4e00\u884c\\r\\nctrl + f | \u641c\u7d22\\r\\nCtrl + Home | \u8df3\u8f6c\u5230\u9875\u5934\\r\\nCtrl + End | \u8df3\u8f6c\u5230\u9875\u5c3e\\r\\nCtrl + / | \u6dfb\u52a0\u5173\u95ed\u884c\u6ce8\u91ca\\r\\nShift + Alt +A | \u5757\u533a\u57df\u6ce8\u91ca\\r\\n\\r\\n## 3. \u6709\u7528\u7684\u63d2\u4ef6\\r\\n\\r\\nGit History\\r\\n\\r\\nImport Cost\\r\\n\\r\\nMarkdown Preview Enhance"},{"id":"react2","metadata":{"permalink":"/metaTrip/build/blog/react2","source":"@site/blog/2022-04-24-useMemo.mdx","title":"useMemo and useCallback, you really know it?","description":"- \u8fd9\u7bc7blog\u662f\u5bf9useMemo \u548c useCallback\u7684\u6df1\u5165\u5b66\u4e60\u3002","date":"2022-04-24T00:00:00.000Z","formattedDate":"April 24, 2022","tags":[{"label":"react","permalink":"/metaTrip/build/blog/tags/react"}],"readingTime":8.25,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"vscode \u5feb\u6377\u952e","permalink":"/metaTrip/build/blog/vscode1"},"nextItem":{"title":"\u6211\u505a\u81ea\u5a92\u4f53\u5c0f\u89c6\u9891\u7684\u4e00\u70b9\u611f\u89e6","permalink":"/metaTrip/build/blog/media"}},"content":"import { useState, useMemo, useCallback } from \\"react\\";\\r\\n\\r\\n:::tip\\r\\n- \u8fd9\u7bc7blog\u662f\u5bf9useMemo \u548c useCallback\u7684\u6df1\u5165\u5b66\u4e60\u3002 \\r\\n:::\\r\\n\\r\\nuseMemo \u548c useCallback \u662freact \u63d0\u4f9b\u7684\u6027\u80fd\u4f18\u5316\u5de5\u5177\u3002\u7528\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u4e5f\u77e5\u9053\u8981\u7528\uff0c\u4f46\u662f\u5177\u4f53\u6027\u80fd\u662f\u5982\u4f55\u63d0\u5347\u7684\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u53ef\u89c6\u5316\u51fa\u6765\uff0c\\r\\n\u76f8\u4fe1\u6709\u5f88\u591a\u4eba\u5e76\u4e0d\u662f\u7279\u522b\u4e86\u89e3\u3002\u8fd9\u7bc7blog\u7531\u6b64\u800c\u751f\u3002\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## 1. useMemo\\r\\n\\r\\n** Returns a memoized value. **\\r\\n\\r\\n\u8fd4\u56de\u4e00\u4e2a[\u7f13\u5b58\u503c](https://reactjs.org/docs/hooks-reference.html#usememo), \u8fd9\u4e2a\u662f\u5b98\u7f51\u5bf9useMemo\u63cf\u8ff0\u7684\u7b2c\u4e00\u53e5\u8bdd\u3002\u5982\u4f55\u7406\u89e3\u8fd9\u4e2a\u7f13\u5b58\u503c\u5c31\u5f88\u5173\u952e\uff0c\\r\\n\u5b9e\u9645\u4e0a\u5b98\u7f51\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u7ef4\u57fa\u767e\u79d1\u7684link\u3002\u6211\u628a\u5173\u952e\u7684\u9762\u8bd5copy\u5230\u4e0b\u9762\uff1a\\r\\n\\r\\n:::note\\r\\nIn computing, memoization or memoisation is an optimization technique used primarily to speed up computer programs by storing\\r\\nthe results of expensive funtion calls and returning the cached result when the same inputs occur again.\\r\\n:::\\r\\n\\r\\n\u6240\u4ee5\u6211\u8003\u8651\u518d\u4e09\uff0c\u7f13\u5b58\u503c\u8fd8\u662f\u6bd4\u8f83\u5408\u9002\u7684\uff0c\u4ed6\u7684\u7279\u70b9\u5c31\u662f\u5982\u679c\u518d\u6709\u76f8\u540c\u8f93\u5165\uff0c\u90a3\u4e48\u5c31\u65e0\u9700\u8ba1\u7b97\uff0c\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u503c\u5373\u53ef\uff0c\u4ece\u672a\u63d0\u5347\u751f\u4ee3\u7801\u6027\u80fd\u3002\\r\\n\\r\\n\u6211\u4eec\u518d\u56de\u5230useMemo\uff0cPass a \u201ccreate\u201d function and an array of dependencies. \\r\\nuseMemo will only recompute the memoized value when one of the dependencies has changed. \\r\\nThis optimization helps to avoid expensive calculations on every render.\\r\\n\\r\\n\u5b83\u7684\u53c2\u6570\u662f\u4e00\u4e2afunction(\u4e0d\u662f\u56de\u8c03)\u548c\u4e00\u4e2a\u4f9d\u8d56\u6570\u7ec4\u3002\u6570\u7ec4\u4e2d\u7684\u4f9d\u8d56\u53d1\u751f\u53d8\u5316\u624d\u4f1a\u89e6\u53d1\u51fd\u6570\u4e2d\u7684\u8ba1\u7b97\u3002\\r\\n\u5982\u679c\u5b98\u7f51\u7684\u63cf\u8ff0\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u4e0b\u9762\u662f\u6211\u4ece\u5176\u4ed6blog\u627e\u5230\u7684\u4e00\u6bb5\u66f4\u4e3a\u6e05\u6670\u7684\u4e00\u6bb5useMemo\u63cf\u8ff0\u3002\\r\\n\\r\\n:::note\\r\\nReact has a built-in hook called useMemo that allows you to memoize expensive functions \\r\\nso that you can avoid calling them on every render. You simple pass in a function and an array of inputs \\r\\nand useMemo will only recompute the memoized value when one of the inputs has changed.\\r\\n:::\\r\\n\\r\\n\u4f7f\u7528useMemo\u9700\u8981\u6ce8\u610f\u7684\u51e0\u70b9\uff1a\\r\\n\\r\\n:::tip\\r\\n1. **Don\u2019t do anything there that you wouldn\u2019t normally do while rendering.** For example, side effects belong in useEffect, not useMemo.\\r\\n\\r\\n2. If no array is provided, **a new value will be computed on every render**.\\r\\n\\r\\n3. You may rely on useMemo as a performance optimization, **not as a semantic guarantee**. In the future, React may choose to \u201cforget\u201d some previously memoized values and recalculate them on next render, e.g. to free memory for offscreen components. **Write your code so that it still works without useMemo** \u2014 and then add it to optimize performance.\\r\\n:::\\r\\n\\r\\n\u4e0b\u9762\u80fd\u6211\u4eec\u5c31show case for useMemo\uff0c\u53ef\u89c6\u5316\u7684\u8ba9\u5927\u5bb6\u53ef\u4ee5\u4f53\u9a8c\u4e00\u4e0b\u4ed6\u7684\u6027\u80fd\u63d0\u5347\u3002\\r\\n\\r\\n\u6d4b\u8bd5\u65b9\u6cd5\uff1a\\r\\n\\r\\n1. \u70b9\u51fbNext word\uff0c\u53ef\u4ee5\u611f\u53d7\u5230\u7531\u4e8e\u590d\u6742\u8ba1\u7b97\u5e26\u6765\u7684\u5ef6\u8fdf\uff0c\u70b9\u51fbIncrement\uff0c \u7531\u4e8e\u590d\u6742\u8ba1\u7b97\u88abuseMemo\u4f18\u5316\uff0c\u6240\u4ee5\u611f\u53d7\u4e0d\u5230\u5ef6\u8fdf\u5f71\u54cd\u3002\\r\\n\u8fde\u7eed\u70b9\u51fb\u6548\u679c\u66f4\u660e\u663e\u3002\\r\\n\\r\\n2. \u6ce8\u91ca\u6389\u4e0b\u9762useMemo\u4ee3\u7801\uff0c\u66b4\u9732\u590d\u6742\u8ba1\u7b97\u5728render\u8fc7\u7a0b\u4e2d\u3002\u91cd\u590d\u4e0a\u9762\u7684\u52a8\u4f5c\uff0c\u70b9\u51fbIncrement\u7684\u65f6\u5019\u4e5f\u51fa\u73b0\u5ef6\u8fdf\u6548\u679c\uff0c\u5b9e\u9645\u4e0a\u662f\u4e0d\u9700\u8981\u7684\u3002\\r\\n\\r\\n\\r\\n```jsx live\\r\\n\\r\\nfunction TestUseMemo() {\\r\\n\\r\\n  // State for our counter\\r\\n  const [count, setCount] = useState(0);\\r\\n  \\r\\n  // State to keep track of current word in array we want to show\\r\\n  const [wordIndex, setWordIndex] = useState(0);\\r\\n  \\r\\n  // Words we can flip through and view letter count\\r\\n  const words = [\\"hey\\", \\"this\\", \\"is\\", \\"cool\\"];\\r\\n  const word = words[wordIndex];\\r\\n  \\r\\n  // Returns number of letters in a word\\r\\n  // We make it slow by including a large and completely unnecessary loop\\r\\n  const computeLetterCount = (word) => {\\r\\n    let i = 0;\\r\\n    while (i < 1000000000) i++;\\r\\n    return word.length;\\r\\n  };\\r\\n  \\r\\n  // Memoize computeLetterCount so it uses cached return value if input array ...\\r\\n  // ... values are the same as last time the function was run.\\r\\n  // \u9488\u5bf9\u6027\u7684\u5728\u9700\u8981\u7684\u4f9d\u8d56\u4e0b\u8fdb\u884c\u8ba1\u7b97\uff0c\u5176\u4ed6\u7684\u4f9d\u8d56\u6539\u53d8\u7684\u65f6\u5019\u7528cache\u6570\u636e\uff0c\u4ece\u800c\u63d0\u5347\u6574\u4f53\u6027\u80fd\\r\\n  const letterCount = useMemo(() => computeLetterCount(word), [word]);\\r\\n  \\r\\n  // This would result in lag when incrementing the counter because ...\\r\\n  // ... we\'d have to wait for expensive function when re-rendering.\\r\\n  //const letterCount = computeLetterCount(word);\\r\\n  \\r\\n  return (\\r\\n    <div style={{ padding: \\"15px\\" }}>\\r\\n      <h2>Compute number of letters (slow \ud83d\udc0c)</h2>\\r\\n      <p>\\r\\n        \\"{word}\\" has {letterCount} letters\\r\\n      </p>\\r\\n      <button\\r\\n        onClick={() => {\\r\\n          const next = wordIndex + 1 === words.length ? 0 : wordIndex + 1;\\r\\n          setWordIndex(next);\\r\\n        }}\\r\\n      >\\r\\n        Next word\\r\\n      </button>\\r\\n      <h2>Increment a counter (fast \u26a1\ufe0f)</h2>\\r\\n      <p>Counter: {count}</p>\\r\\n      <button onClick={() => setCount(count + 1)}>Increment</button>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\n```\\r\\n\\r\\n**\u6240\u4ee5\u7ed3\u8bba\u5c31\u662f\u5728render\u4e2d\u7684\u590d\u6742\u8ba1\u7b97\uff0c\u9700\u8981useMemo\u6765\u8fdb\u884c\u76f8\u5173\u4f9d\u8d56\u4e0b\u7684\u6027\u80fd\u4f18\u5316\u3002**\\r\\n\\r\\n## 1. useCallback\\r\\n\\r\\n** Returns a memoized callback.. **\\r\\n\\r\\n\u8fd4\u56de\u4e00\u4e2a[\u7f13\u5b58\u56de\u8c03](https://reactjs.org/docs/hooks-reference.html#usecallback), \u6211\u4eec\u53ef\u4ee5\u5bf9\u6bd4\u4e0a\u9762\u7684useMemo\u6765\u770b\uff0c\u8fd9\u6b21\u7f13\u5b58\u7684\u5b9e\u9645\u4e0a\u662f\u6211\u4eec\u7684\u51fd\u6570\u65b9\u6cd5\u672c\u8eab\u3002\\r\\n\\r\\n\u6765\u770b\u5b98\u7f51\u7684\u89e3\u91ca\uff0cPass an inline callback and an array of dependencies. \\r\\nuseCallback will return a memoized version of the callback that only changes if one of the dependencies has changed. \\r\\nThis is useful when passing callbacks to optimized child components that rely on reference equality \\r\\nto prevent unnecessary renders (e.g. shouldComponentUpdate).\\r\\n\\r\\n\u548cuseMemo\u7684\u63cf\u8ff0\u5bf9\u6bd4\uff0c\u8fd9\u91cc\u9762\u5f88\u660e\u663e\u544a\u8bc9\u4e86\u6211\u4eec\u4ec0\u4e48\u65f6\u5019\u7528useCallback\u6bd4\u8f83\u5408\u9002\uff0c\u5c31\u662fshouldComponentUpdate\u4e4b\u524d\u4ec0\u4e48\u65f6\u5019\u7528\uff0c\u73b0\u5728\u4f60\u5c31\u53ef\u4ee5\u8003\u8651\u7528useCallback\u3002\\r\\n\u4e0b\u9762\u662fshouldComponentUpdate\u7684\u5b98\u7f51\u63cf\u8ff0\u3002\\r\\n\\r\\n:::note\\r\\nUse shouldComponentUpdate() to let React know if a component\u2019s output is not affected by the current change in state or props. \\r\\nThe default behavior is to re-render on every state change\\r\\n:::\\r\\n\\r\\n\u6240\u4ee5\u4ed6\u662f\u7528\u6765\u4f18\u5316\u9650\u5236\u5b50\u7ec4\u4ef6\u6e32\u67d3\u6b21\u6570\u7684\u3002\u5982\u679c\u5b98\u7f51\u7684\u63cf\u8ff0\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u4e0b\u9762\u662f\u6211\u4ece\u5176\u4ed6blog\u627e\u5230\u7684\u4e00\u6bb5\u66f4\u4e3a\u6e05\u6670\u7684\u4e00\u6bb5useCallback\u63cf\u8ff0\u3002\\r\\n\\r\\n:::note\\r\\nThe useCallback hook is used when you have a component in which the child is rerendering again and again without need.\\r\\nPass an inline callback and an array of dependencies. useCallback will return a memoized version of the callback that only changes \\r\\nif one of the dependencies has changed.\\r\\n:::\\r\\n\\r\\n\u4f7f\u7528useMemo\u9700\u8981\u6ce8\u610f\u7684\u51e0\u70b9\uff1a\\r\\n\\r\\n:::tip\\r\\n1. useCallback(fn, deps) is equivalent to useMemo(() => fn, deps)\\r\\n\\r\\n2. useMemo\u548cuseCallBack, \u5728\u672a\u6765\u7684react\u7248\u672c\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u4f9d\u8d56\u6570\u7ec4\u662f\u4f1a\u88ab\u53bb\u6389\u7684\\r\\n\\r\\n:::\\r\\n\\r\\n\u4e0b\u9762\u80fd\u6211\u4eec\u5c31show case for useCallback\uff0c\u53ef\u89c6\u5316\u7684\u8ba9\u5927\u5bb6\u53ef\u4ee5\u4f53\u9a8c\u4e00\u4e0b\u4ed6\u7684\u6027\u80fd\u63d0\u5347\u3002\\r\\n\\r\\n\u6d4b\u8bd5\u65b9\u6cd5\uff1a\\r\\n\\r\\n1. \u4ee3\u7801\u4e2d\u7684funccount\u5b9a\u4e49\u4e3a\\r\\n```jsx\\r\\nlet funccount = new Set();\\r\\n\\r\\n// Set \u5bf9\u8c61\u662f\u552f\u4e00\u503c\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u503c\u5728 Set \u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\\r\\n// \u5982\u679c\u5bf9Set()\u5b9a\u4e49\u4e0d\u662f\u548c\u6e05\u695a\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u6d4b\u8bd5\u7406\u89e3\uff1a\\r\\nconst set1 = new Set();\\r\\n\\r\\nset1.add(1) \\r\\nset1.add(2)  \\r\\nset1.add(3) \\r\\nset1.add(1) \\r\\n\\r\\nset1.size // 3\\r\\n```\\r\\n\\r\\n2. \u9700\u8981F12\uff0c\u770bconsole log\u7684\u8c03\u7528\u6b21\u6570\\r\\n\\r\\n3. \u70b9\u51fb\u5982\u4e0b\u4e09\u4e2a\u6309\u94ae\uff0c\u5728\u6ca1\u6709\u4f7f\u7528useCallBack\u7684\u65f6\u5019\u90fd\u662f\u6e32\u67d33\u6b21\u7d2f\u52a0\uff0c\u8bf4\u660e\u6bcf\u6b21render3\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u88ab\u91cd\u65b0\u6e32\u67d3\u5230\u3002\\r\\n\\r\\n4. \u6ce8\u91ca\u6389\u539f\u6709\u65b9\u6cd5\uff0c\u6253\u5f00useCallback\u7684\u65b9\u6cd5\uff0c\u518d\u6b21\u89c2\u5bdf\u6e32\u67d3\u6b21\u6570\uff0c\u4f1a\u53d1\u73b0\u548c\u4f9d\u8d56\u4ea7\u751f\u5173\u7cfb\uff0c\u6ca1\u6709\u89e6\u53d1\u7684\u5b50\u7ec4\u4ef6\u4e5f\u4e0d\u4f1a\u88ab\u6e32\u67d3\u4e86\u3002\\r\\n\\r\\n\\r\\n```jsx live\\r\\nfunction TestUseCallback() {\\r\\n\\r\\n  const [count, setCount] = useState(0)\\r\\n  const [number, setNumber] = useState(0)\\r\\n \\r\\n  const incrementCounter = () => {\\r\\n    setCount(count + 1)\\r\\n  }\\r\\n  const decrementCounter = () => {\\r\\n    setCount(count - 1)\\r\\n  }\\r\\n   \\r\\n   const incrementNumber = () => {\\r\\n    setNumber(number + 1)\\r\\n  }\\r\\n\\r\\n  /*\\r\\n  const incrementCounter = useCallback(() => {\\r\\n    setCount(count + 1)\\r\\n  }, [count])\\r\\n\\r\\n  const decrementCounter = useCallback(() => {\\r\\n    setCount(count - 1)\\r\\n  }, [count])\\r\\n\\r\\n  const incrementNumber = useCallback(() => {\\r\\n    setNumber(number + 1)\\r\\n  }, [number])\\r\\n  */ \\r\\n\\r\\n  funccount.add(incrementCounter);\\r\\n  funccount.add(decrementCounter);\\r\\n  funccount.add(incrementNumber);\\r\\n  console.log(\'funccount.size:\' + funccount.size);\\r\\n \\r\\n  return (\\r\\n    <div>\\r\\n      <h2>Count: {count}</h2>\\r\\n      <h2>Number: {number}</h2>\\r\\n      <button onClick={incrementCounter}>\\r\\n         Increase counter\\r\\n      </button>\\r\\n      <button onClick={decrementCounter}>\\r\\n         Decrease Counter\\r\\n      </button>\\r\\n      <button onClick={incrementNumber}>\\r\\n         increase number\\r\\n      </button>\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n \\r\\n\\r\\n```\\r\\n\\r\\n\u603b\u7ed3\u5c31\u662fuseCallback\u9488\u5bf9\u51fd\u6570\u7f13\u5b58\uff0c\u4e3b\u8981\u9650\u5236\u5b50\u7ec4\u4ef6\u7684\u6e32\u67d3\u6b21\u6570\\r\\n\\r\\n\u540e\u9762\u6211\u8fd8\u4f1a\u5bf9Memo\u8fdb\u884c\u4e00\u4e2a\u603b\u7ed3\u7684\u3002"},{"id":"media","metadata":{"permalink":"/metaTrip/build/blog/media","source":"@site/blog/2022-03-30-media1.mdx","title":"\u6211\u505a\u81ea\u5a92\u4f53\u5c0f\u89c6\u9891\u7684\u4e00\u70b9\u611f\u89e6","description":"- From B\u7ad9 \u6851\u5c3c\u5b59\u5148\u751f","date":"2022-03-30T00:00:00.000Z","formattedDate":"March 30, 2022","tags":[{"label":"funding","permalink":"/metaTrip/build/blog/tags/funding"}],"readingTime":0.13,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"useMemo and useCallback, you really know it?","permalink":"/metaTrip/build/blog/react2"},"nextItem":{"title":"\u5982\u4f55\u6311\u9009\u9002\u5408\u6295\u8d44\u7684\u6307\u6570\u57fa\u91d1","permalink":"/metaTrip/build/blog/funding-basic5"}},"content":":::tip\\r\\n- From B\u7ad9 \u6851\u5c3c\u5b59\u5148\u751f\\r\\n- \u5927\u5bb6\u5feb\u6765\u5173\u6ce8\u6211\u5440\uff01\u4e48\u4e48\u54d2\uff01\\r\\n:::\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n<iframe src=\\"https://www.bilibili.com/video/BV1dL4y1F727?t=19.7\\" width=\\"100%\\" height=\\"800px\\"></iframe>"},{"id":"funding-basic5","metadata":{"permalink":"/metaTrip/build/blog/funding-basic5","source":"@site/blog/2022-03-09-f5.mdx","title":"\u5982\u4f55\u6311\u9009\u9002\u5408\u6295\u8d44\u7684\u6307\u6570\u57fa\u91d1","description":"- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82824","date":"2022-03-09T00:00:00.000Z","formattedDate":"March 9, 2022","tags":[{"label":"funding","permalink":"/metaTrip/build/blog/tags/funding"}],"readingTime":4.665,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"\u6211\u505a\u81ea\u5a92\u4f53\u5c0f\u89c6\u9891\u7684\u4e00\u70b9\u611f\u89e6","permalink":"/metaTrip/build/blog/media"},"nextItem":{"title":"useEffect\uff0cyou really know it?","permalink":"/metaTrip/build/blog/react1"}},"content":":::tip\\r\\n- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82824\\r\\n- \u5c0f\u767d\u5b66\u4e60\uff0c\u5207\u52ff\u76f2\u76ee\u8ddf\u4ece\\r\\n:::\\r\\n\\r\\n\\r\\n## 1.\u683c\u96f7\u5384\u59c6\u4ef7\u503c\u6295\u8d44\u76843\u5927\u7406\u8bba\\r\\n\\r\\n\u683c\u96f7\u5384\u59c6\u662f\u5df4\u83f2\u7279\u7684\u8001\u5e08\uff0c\u6709\u4e24\u90e8\u8457\u4f5c\u300a\u8bc1\u5238\u5206\u6790 Security Analysis\u300b \u548c \u300a\u806a\u660e\u7684\u6295\u8d44\u8005\u300b\u3002\\r\\n\u5176\u4ef7\u503c\u6295\u8d44\u6838\u5fc3\u5728\u4e8e\u201c\u4f4e\u4f30\u503c\u4ef7\u503c\u6295\u8d44+\u6307\u6570\u57fa\u91d1\u201d\u3002\\r\\n\\r\\n### 1-1.\u4ef7\u683c\u4e0e\u4ef7\u503c\u7684\u5173\u7cfb\\r\\n\u80a1\u7968\u6709\u5176\u5185\u5728\u4ef7\u503c\uff0c\u80a1\u7968\u7684\u4ef7\u683c\u56f4\u7ed5\u5176\u5185\u5728\u4ef7\u503c\u4e0a\u4e0b\u6ce2\u52a8\u3002\\r\\n\u4e0d\u8fc7\u867d\u7136\u80a1\u4ef7\u5728\u77ed\u671f\u5185\u4f1a\u66b4\u6da8\u66b4\u8dcc\uff0c\u4f46\u957f\u671f\u8868\u73b0\u8fd8\u662f\u4f1a\u4e0e\u80a1\u7968\u7684\u5185\u5728\u4ef7\u503c\u8d8b\u4e8e\u4e00\u81f4\u3002\\r\\n\\r\\n### 1-2.\u80fd\u529b\u5708\\r\\n\\r\\n\u6211\u4eec\u5bf9\u6240\u6295\u8d44\u7684\u54c1\u79cd\u975e\u5e38\u4e86\u89e3\uff0c\u80fd\u5224\u65ad\u51fa\u5b83\u5927\u6982\u7684\u5185\u5728\u4ef7\u503c\u662f\u591a\u5c11\u3002\\r\\n\u6211\u4eec\u5bf9\u54c1\u79cd\u4e86\u89e3\u7684\u8d8a\u591a, \u5185\u529b\u5708\u4e5f\u5c31\u8d8a\u5927\uff0c\u524d\u63d0\u662f\u6211\u4eec\u771f\u7684\u4e86\u89e3\u3002\\r\\n\\r\\n\u5df4\u83f2\u7279\u7684\u89e3\u91ca\u662f\uff1a\u4f60\u7684\u80fd\u529b\u5708\uff0c\u6700\u91cd\u8981\u7684\u4e0d\u662f\u5708\u7684\u5927\u5c0f\uff0c\u800c\u662f\u4f60\u77e5\u9053\u81ea\u5df1\u7684\u80fd\u529b\u5708\u7684\u8fb9\u754c\u6240\u5728\u3002\\r\\n\\r\\n\u540e\u9762\u7684\u4f30\u503c\u6d4b\u7b97\uff0c\u89e3\u51b3\u4e86\u4e00\u90e8\u5206\u80fd\u529b\u5708\u7684\u95ee\u9898\u3002\\r\\n\\r\\n### 1-3.\u5b89\u5168\u8fb9\u9645\\r\\n\\r\\n\u6211\u4eec\u8981\u75280.4\u5143\u4e70\u4ef7\u503c1\u5143\u7684\u4e1c\u897f\uff0c\u8fd9\u4e2a\u5c31\u662f\u5b89\u5168\u8fb9\u754c\u7684\u6838\u5fc3\u3002\\r\\n\u6211\u4eec\u8981\u7528\u6bd4\u4ef7\u503c\u66f4\u4f4e\u7684\u4ef7\u683c\u53bb\u4e70\u80a1\u7968\u3002\u5f53\u4ef7\u683c\u5927\u5e45\u4f4e\u4e8e\u80a1\u7968\u7684\u5185\u5728\u4ef7\u503c\u7684\u65f6\u5019\uff0c\u8fd9\u65f6\u6295\u8d44\u624d\u5177\u5907\u5b89\u5168\u8fb9\u754c\u3002\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## 2.\u4f30\u503c\\r\\n\\r\\n\u6211\u4eec\u5982\u4f55\u77e5\u9053\u57fa\u91d1\u7684\u4ef7\u683c\u662f\u4e0d\u662f\u4f4e\u4e8e\u4ef7\u503c\uff1f\u8fd9\u5c31\u9700\u8981\u4e00\u4e9b\u4f30\u503c\u65b9\u6cd5\u6765\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u5224\u65ad\u3002\\r\\n\\r\\n### 2-1.\u5e38\u89c1\u7684\u4f30\u503c\u6307\u6807\\r\\n\\r\\n:::note\\r\\n\u5e02\u76c8\u7387\uff1a\u516c\u53f8\u5e02\u503c/\u516c\u53f8\u76c8\u5229\\r\\n\\r\\n- \u9759\u6001\u5e02\u76c8\u7387\uff1a\u516c\u53f8\u76c8\u5229\u53d6\u7528\u516c\u53f8\u4e0a\u4e00\u5e74\u5ea6\u7684\u51c0\u5229\u6da6\\r\\n- \u6eda\u52a8\u5e02\u76c8\u7387\uff1a\u53d6\u7528\u6700\u8fd14\u4e2a\u5b63\u5ea6\u8d22\u62a5\u7684\u51c0\u5229\u6da6\\r\\n- \u52a8\u6001\u5e02\u76c8\u7387\uff1a\u53d6\u7528\u9884\u4f30\u7684\u516c\u53f8\u4e0b\u4e00\u5b63\u5ea6\u51c0\u5229\u6da6\\r\\n\\r\\n\u5e02\u76c8\u7387\u53cd\u5e94\u4e86\u6211\u4eec\u613f\u610f\u4e3a\u83b7\u53d61\u5143\u7684\u51c0\u5229\u6da6\u4ed8\u51fa\u591a\u5c11\u4ee3\u4ef7\\r\\n\\r\\n\u5e02\u503c\u4ee3\u8868\u4e86\u6211\u4eec\u4e70\u4e0b\u8fd9\u4e2a\u516c\u53f8\u7406\u8bba\u4e0a\u9700\u8981\u591a\u5c11\u8d44\u91d1\u91cf\\r\\n\\r\\n\u8fd9\u4e2a\u6307\u6807\u9002\u7528\u4e8e\u6d41\u901a\u6027\u597d\uff0c\u76c8\u5229\u7a33\u5b9a\u7684\u54c1\u79cd\u3002\\r\\n:::\\r\\n\\r\\n:::note\\r\\n\u76c8\u5229\u6536\u76ca\u7387\uff1a\u5e02\u76c8\u7387\u7684\u5012\u6570\uff0c \u76c8\u5229\u6536\u76ca\u7387\u9ad8\uff0c\u80a1\u606f\u7387\u5c31\u9ad8\u3002\u5e02\u76c8\u7387\u5c31\u4f4e\\r\\n:::\\r\\n\\r\\n:::note\\r\\n\u5e02\u51c0\u7387\uff1a\u6bcf\u80a1\u80a1\u4ef7\u4e0e\u6bcf\u80a1\u51c0\u8d44\u4ea7\u7684\u6bd4\u7387\uff0c\u516c\u53f8\u5e02\u503c/\u516c\u53f8\u51c0\u8d44\u4ea7\\r\\n\\r\\n\u51c0\u8d44\u4ea7\u5c31\u662f\u8d44\u4ea7\u51cf\u53bb\u8d1f\u503a\\r\\n:::\\r\\n\\r\\n:::note\\r\\n\u80a1\u606f\u7387\uff1a\u8fc7\u53bb\u4e00\u5e74\u516c\u53f8\u7684\u73b0\u91d1\u5206\u7ea2/\u516c\u53f8\u7684\u5e02\u503c\uff0c\u968f\u7740\u80a1\u4ef7\u6ce2\u52a8\uff0c\u80a1\u4ef7\u8d8a\u4f4e\uff0c\u80a1\u606f\u7387\u8d8a\u9ad8\\r\\n\\r\\n\u5206\u7ea2\u7387\uff08\u6d3e\u606f\u7387\uff09\uff1a\u8fc7\u53bb\u4e00\u5e74\u516c\u53f8\u7684\u73b0\u91d1\u5206\u7ea2/\u516c\u53f8\u7684\u603b\u51c0\u5229\u6da6\uff0c\u4e00\u822c\u662f\u516c\u53f8\u9884\u5148\u8bbe\u7f6e\u597d\uff0c\u591a\u5e74\u4e0d\u53d8\\r\\n:::\\r\\n\\r\\n\\r\\n### 2-2.\u67e5\u8be2\u6307\u6570\u4f30\u8ba1\u7684\u65b9\u5f0f\\r\\n\\r\\n\u516c\u4f17\u53f7\uff1a\u5b9a\u6295\u5341\u5e74\u8d5a\u5341\u500d\\r\\n\\r\\n\u6307\u6570\u5b98\u7f51\u67e5\u8be2\uff1a\u4e2d\u8bc1\u6307\u6570\u5b98\u7f51\u53ef\u67e5\\r\\n\\r\\n\u8fd8\u6709\u5c31\u662f\u6536\u8d39\u7684\u91d1\u878d\u7ec8\u7aef\uff0c\u4e00\u822c\u4e0d\u592a\u9700\u8981\\r\\n\\r\\n\\r\\n## 3.\u6311\u9009\u6307\u6570\u57fa\u91d1\u7684\u4e24\u5927\u7b56\u7565\\r\\n\\r\\n### 3-1. \u76c8\u5229\u6536\u76ca\u7387\u6cd5\\r\\n\\r\\n- \u5f53\u76c8\u5229\u6536\u76ca\u7387\u5927\u4e8e10%\u65f6\uff0c\u5f00\u59cb\u5b9a\u6295\\r\\n- \u5f53\u76c8\u5229\u6536\u76ca\u7387\u5c0f\u4e8e10%\u65f6\uff0c\u505c\u6b62\u5b9a\u6295\uff0c\u575a\u5b9a\u6301\u6709\\r\\n- \u5f53\u76c8\u5229\u6536\u76ca\u7387\u5c0f\u4e8e6.4%\u65f6\uff0c\u5206\u6279\u5356\u51fa\u6307\u6570\u57fa\u91d1\uff0c\u6362\u6210\u5176\u4ed6\u54c1\u79cd\uff0c\u5206\u6279\u5356\u51fa\u98ce\u9669\u66f4\u4f4e\\r\\n\\r\\n\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u76c8\u5229\u6536\u76ca\u7387\u53d8\u5316\u4e0d\u5927\uff0c\u6536\u76ca\u5927\u6982\u5728\uff0815% -- 20%\uff09\\r\\n\\r\\n\u5c40\u9650\u6027\uff1a\u53ea\u9002\u7528\u4e8e\u76c8\u5229\u7a33\u5b9a\u7684\u4ef7\u503c\u6307\u6570\uff0c\u4e0a\u8bc1\u7ea2\u5229\uff0c\u4e2d\u8bc1\u7ea2\u5229\uff0c\u4e0a\u8bc150\uff0c\u57fa\u672c\u976250\uff0c\u4e0a\u8bc150AH\u4f18\u9009\uff0c\u592e\u89c650\u3002\\r\\n\\r\\n\\r\\n### 3-2. \u535a\u683c\u516c\u5f0f\u6cd5\\r\\n\\r\\n\u516c\u5f0f\u8ba1\u7b97\u6bd4\u8f83\u7ed5\uff0c\u53ea\u8bf4\u7ed3\u8bba\uff1a\\r\\n\\r\\n- \u5728\u80a1\u606f\u7387\u9ad8\u7684\u65f6\u5019\u4e70\u5165\\r\\n- \u5728\u5e02\u76c8\u7387\u5904\u4e8e\u5386\u53f2\u8f83\u4f4e\u4f4d\u7f6e\u65f6\u4e70\u5165\\r\\n- \u4e70\u5165\u540e\u8010\u5fc3\u7b49\u5f85\u201c\u5747\u503c\u56de\u5f52\u201d\uff0c\u5373\u5e02\u76c8\u7387\u4ece\u4f4e\u5230\u9ad8\u3002"},{"id":"react1","metadata":{"permalink":"/metaTrip/build/blog/react1","source":"@site/blog/2022-03-08-useEffect.mdx","title":"useEffect\uff0cyou really know it?","description":"- \u8fd9\u7bc7blog\u662f\u5bf9useEffect\u53ca\u76f8\u5173hooks\u7684\u6df1\u5165\u5b66\u4e60\u3002","date":"2022-03-08T00:00:00.000Z","formattedDate":"March 8, 2022","tags":[{"label":"react","permalink":"/metaTrip/build/blog/tags/react"}],"readingTime":11.255,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"\u5982\u4f55\u6311\u9009\u9002\u5408\u6295\u8d44\u7684\u6307\u6570\u57fa\u91d1","permalink":"/metaTrip/build/blog/funding-basic5"},"nextItem":{"title":"Micro FrontEnd Basic","permalink":"/metaTrip/build/blog/microFE1"}},"content":"import react from \'react\';\\r\\n\\r\\n:::tip\\r\\n- \u8fd9\u7bc7blog\u662f\u5bf9useEffect\u53ca\u76f8\u5173hooks\u7684\u6df1\u5165\u5b66\u4e60\u3002 \\r\\n:::\\r\\n\\r\\n[Using the Effect Hook](https://reactjs.org/docs/hooks-effect.html) \u5bf9\u4e8e\u5e38\u7528\u7684react hooks\u6211\u4e00\u76f4\u8ba4\u4e3a\u662f\u6bd4\u8f83\u4e86\u89e3\u7684\uff0c\u7136\u800c\u6700\u8fd1\u7684\u4e00\u6b21\u9879\u76ee\u7ec4sharing\uff0c\\r\\n\u8ba8\u8bba\u5230\u8fd9\u5757\uff0c\u5c45\u7136\u53d1\u73b0\u8fd9\u4e48\u5e38\u7528\u7684hook\u81ea\u5df1\u7684\u7406\u89e3\u7adf\u7136\u662f\u6709\u504f\u5dee\u7684\uff0c\u8fd8\u9700\u8981\u53bb\u6df1\u5165\u7684\u5b66\u4e60\u4e00\u4e0b\u3002\u8fd9\u7bc7blog\u7531\u6b64\u800c\u6765\u3002\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## 1. useEffect\\r\\n\\r\\n:::note\\r\\nIf you\u2019re familiar with React class lifecycle methods, you can think of useEffect Hook as componentDidMount, componentDidUpdate, and componentWillUnmount combined.\\r\\n\\r\\n\u6211\u4eec\u5e38\u89c4\u7684\u7406\u89e3\uff0cuseEffect\u5e94\u8be5\u5c31\u662f\u4e4b\u524dclass component\u751f\u547d\u5468\u671f\u4e2dcomponentDidMount, componentDidUpdate, and componentWillUnmount\u7684\u7ed3\u5408\\r\\n:::\\r\\n\\r\\nreact\u7ec4\u4ef6\u4e2d\u6709\u4e24\u79cd\u5e38\u89c1\u7684side effects\uff0c\u4e00\u79cd\u9700\u8981clearup, \u4e00\u79cd\u4e0d\u9700\u8981\uff0c\u5177\u4f53\u5982\u4e0b\u3002\\r\\n\\r\\n### 1-1. Effects Without Cleanup\\r\\n\\r\\n\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u8fd0\u884c\u989d\u5916\u7684\u4ee3\u7801\u5728react\u66f4\u65b0dom\u7ed3\u6784\u4e4b\u540e\uff0c\u6bd4\u5982ajax \u8bf7\u6c42\uff0c\u624b\u52a8\u66f4\u6539dom\u7ed3\u6784\uff0c\u540e\u8005logging\u7684\u65f6\u5019\u3002\\r\\n\u8fd9\u4e9b\u60c5\u51b5\u662f\u4e0d\u9700\u8981cleanup\u7684\u3002\\r\\n\\r\\n\u6211\u4eec\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a\\r\\n\\r\\n```jsx\\r\\nclass Example extends React.Component {\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n    this.state = {\\r\\n      count: 0\\r\\n    };\\r\\n  }\\r\\n\\r\\n  componentDidMount() {\\r\\n    document.title = `You clicked ${this.state.count} times`;\\r\\n  }\\r\\n  componentDidUpdate() {\\r\\n    document.title = `You clicked ${this.state.count} times`;\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <div>\\r\\n        <p>You clicked {this.state.count} times</p>\\r\\n        <button onClick={() => this.setState({ count: this.state.count + 1 })}>\\r\\n          Click me\\r\\n        </button>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n\u7528class component\u6765\u5199\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u4e24\u4e2a\u751f\u547d\u5468\u671f\u51fd\u6570\uff0c componentDidMount\u5728\u521d\u59cbrender\u7684\u65f6\u5019\u89e6\u53d1\uff0ccomponentDidUpdate\u5728\u6bcf\u6b21update\u7684\u65f6\u5019\u89e6\u53d1\\r\\n\u65e0\u8bba\u5982\u4f55\u4f18\u5316\u4ee3\u7801\uff0c **we have to duplicate the code between these two lifecycle methods in class**\uff0c\u6211\u60f3\u8fd9\u4e5f\u662f\u6211\u4eec\u540e\u9762\u7528hooks\u6765\u4ee3\u66ff\u7684\u539f\u56e0\u4e4b\u4e00\u3002\\r\\n\\r\\n\\r\\n\u5982\u679c\u6211\u4eec\u7528Hooks\u6765\u5199\u5462\\r\\n\\r\\n```jsx live\\r\\nfunction Example() {\\r\\n  const [count, setCount] = useState(0);\\r\\n\\r\\n  useEffect(() => {\\r\\n    console.log(\'demo1 useEffect running\');\\r\\n    document.title = `You clicked ${count} times`;\\r\\n  });\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <p>You clicked {count} times</p>\\r\\n      <button onClick={() => setCount(count + 1)}>\\r\\n        Click me\\r\\n      </button>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n```\\r\\n\\r\\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cuseEffect\u4f1a\u5728\u7b2c\u4e00\u6b21render\u4ee5\u53ca\u540e\u9762\u6bcf\u6b21update\u7684\u65f6\u5019\u89e6\u53d1\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u8003\u8651mounting\u8fd8\u662fupdateing\u3002\\r\\nit will remember the effect we used, and then run our effect after updating the DOM. This happens for every render, including the first one.\\r\\n\\r\\n\\r\\n### 1-2. Effects With Cleanup\\r\\n\\r\\n\u4e00\u822c\u6bd4\u8f83\u5e38\u89c1\u7684\u9700\u8981cleanup\u7684\u4f8b\u5b50\uff0c\u6709\u5efa\u7acb\u53d6\u6d88\u5b9a\u65f6\u5668\uff0c\u9632\u6b62\u5185\u5b58\u6ea2\u51fa\u7b49\u7b49\uff0c\u6211\u4eec\u770breact \u5b98\u7f51class component with cleanup\u7684\u4f8b\u5b50\uff1a\\r\\n\\r\\n```jsx\\r\\nclass FriendStatus extends React.Component {\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n    this.state = { isOnline: null };\\r\\n    this.handleStatusChange = this.handleStatusChange.bind(this);\\r\\n  }\\r\\n\\r\\n  componentDidMount() {\\r\\n    ChatAPI.subscribeToFriendStatus(\\r\\n      this.props.friend.id,\\r\\n      this.handleStatusChange\\r\\n    );\\r\\n  }\\r\\n  componentWillUnmount() {\\r\\n    ChatAPI.unsubscribeFromFriendStatus(\\r\\n      this.props.friend.id,\\r\\n      this.handleStatusChange\\r\\n    );\\r\\n  }\\r\\n  handleStatusChange(status) {\\r\\n    this.setState({\\r\\n      isOnline: status.isOnline\\r\\n    });\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    if (this.state.isOnline === null) {\\r\\n      return \'Loading...\';\\r\\n    }\\r\\n    return this.state.isOnline ? \'Online\' : \'Offline\';\\r\\n  }\\r\\n}\\r\\n```\\r\\n\u5176\u4e2dcomponentDidMount \u548c componentWillUnmount \u662f\u4e92\u4e3a\u955c\u50cf\u7684\u3002\\r\\n\u5982\u679c\u6211\u4eec\u7528Hooks\u6765\u5199\u5462\uff0c\u9700\u8981return\u4e00\u4e2afunction\uff0creact\u4f1a\u5728cleanup\u7684\u65f6\u5019\u8c03\u7528\\r\\n\\r\\n```jsx live\\r\\nfunction FriendStatus(props) {\\r\\n  const [isOnline, setIsOnline] = useState(null);\\r\\n\\r\\n  useEffect(() => {\\r\\n    function handleStatusChange(status) {\\r\\n      setIsOnline(status.isOnline);\\r\\n    }\\r\\n    \\r\\n    console.log(\'demo2 useEffect running\');\\r\\n    // comment since we have no ChatAPI here, just for demo\\r\\n    // ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\\r\\n\\r\\n    // Specify how to clean up after this effect:\\r\\n    // We don\u2019t have to return a named function from the effect. \\r\\n    // We called it cleanup here to clarify its purpose, but you could return an arrow function or call it something different.\\r\\n    return function cleanup() {\\r\\n      console.log(\'demo2 cleanup running\');\\r\\n      // ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\\r\\n    };\\r\\n  });\\r\\n\\r\\n  return (\\r\\n      <>\\r\\n        <p> {isOnline ? \'Online\' : \'Offline\'} </p>\\r\\n        <button onClick={ ()=>setIsOnline(\'online\') } >Online</button>\\r\\n        <button onClick={ ()=>setIsOnline(null) }>Offline</button>\\r\\n      </>\\r\\n  )\\r\\n}\\r\\n```\\r\\n\\r\\n:::tip\\r\\n\u8bd5\u60f3\uff0c\u5982\u679c\u6b64\u65f6\u4f60\u5c1d\u8bd5\u7740\u53bb\u70b9\u51fbonline\u548coffline\u7684button\uff0c\u90a3\u4e48\u6b64\u65f6\u7684return\u4f1a\u4e0d\u4f1a\u88ab\u8c03\u7528\uff1f\\r\\n\\r\\n\u6309\u7167\u6587\u6863return\u5e94\u8be5\u662f\u5728cleanup\u7684\u65f6\u5019\u8c03\u7528\u7684\uff0c\u90a3\u4e48state\u53d8\u5316\u4e86\uff0c\u4f1a\u89e6\u53d1cleanup\u4e48\uff1f\\r\\n:::\\r\\n\\r\\n\u6211\u5c31\u662f\u5728\u8fd9\u4e2a\u5730\u65b9\u51fa\u73b0\u7406\u89e3\u7684\u9519\u8bef\uff0c\u6211\u8ba4\u4e3astate\u53d8\u5316\u662f\u4e0d\u4f1a\u89e6\u53d1cleanup\u7684\uff0c\u53ea\u6709\u5728dom\u7ed3\u6784\u5220\u9664\u4e86\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662fummount\u7684\u65f6\u5019\u624d\u4f1a\u89e6\u53d1\u4e00\u6b21\u3002\\r\\n\u4f46\u662f\u6d4b\u8bd5\u7ed3\u679c\u548c\u6211\u60f3\u5f97\u5b8c\u5168\u4e0d\u540c\uff0c\u6bcf\u6b21state\u53d8\u5316\uff0c\u90fd\u4f1a\u5148\u89e6\u53d1cleanup\uff0c\u7136\u540e\u5728\u89e6\u53d1side effect\u3002\\r\\n\\r\\n\u5927\u5bb6\u53ef\u4ee5\u5728\u4e0a\u9762\u7684live demo\u4e2d\u5c1d\u8bd5\uff0cconsole\u91cc\u6709\u8bb0\u5f55\u53ef\u67e5\u3002\\r\\n\\r\\n\\r\\n\u7136\u540e\u6211\u67e5\u627e\u6587\u6863\uff0c\u53d1\u73b0\u4e86\u8fd9\u4e48\u4e24\u6bb5\u8bdd\u3002\\r\\n\\r\\n:::tip\\r\\nWhy did we return a function from our effect?\\r\\n\\r\\nThis is the optional cleanup mechanism for effects. Every effect may return a function that cleans up after it. \\r\\nThis lets us keep the logic for adding and removing subscriptions close to each other. They\u2019re part of the same effect!\\r\\n:::\\r\\n\\r\\n:::tip\\r\\nWhen exactly does React clean up an effect?\\r\\n\\r\\nReact performs the cleanup when the component unmounts. However, as we learned earlier, effects run for every render and not just once. \\r\\nThis is why React also cleans up effects from the previous render before running the effects next time. \uff08\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48React\u8fd8\u4f1a\u5728\u4e0b\u6b21\u8fd0\u884c\u6548\u679c\u4e4b\u524d\u6e05\u9664\u4e0a\u4e00\u6b21\u6e32\u67d3\u7684\u6548\u679c\uff09\\r\\nWe\u2019ll discuss why this helps avoid bugs and how to opt out of this behavior in case it creates performance issues later below.\\r\\n:::\\r\\n\\r\\n\u7b2c\u4e00\u6bb5\u8bdd\u5173\u952e\u5728\u4e8e\u544a\u8bc9\u6211\u4eecreturn\u662f\u6bcf\u4e2aeffect\u4e2d\u90fd\u5b58\u5728\u7684\u673a\u5236\uff0c**\u4e0d\u7ba1\u4f60\u4f7f\u7528\u4e0d\u4f7f\u7528\uff0c\u4ed6\u90fd\u662feffect\u7684\u4e00\u90e8\u5206**\u3002\\r\\n\\r\\n\u7b2c\u4e8c\u53e5\u8bdd\u5173\u952e\u5728\u4e8e\u544a\u8bc9\u6211\u4eec**\u56e0\u4e3aeffect\u662f\u591a\u6b21\u8fd0\u884c\u7684\uff0c\u6240\u4ee5return\u91cc\u7684cleanup\u4e5f\u662f\u591a\u6b21\u8fd0\u884c\u7684**\uff0c\u8fd9\u6837\u505a\u662f\u6709\u539f\u56e0\u7684\uff1a1.\u907f\u514dbugs. 2.\u53ef\u4ee5\u6709\u9000\u51fa\u673a\u5236\u3002\\r\\n\\r\\n\\r\\n\\r\\n## 2. Tips for Using Effects\\r\\n \\r\\n### 2-1. Tip: Use Multiple Effects to Separate Concerns\\r\\n\\r\\nHooks let us split the code based on what it is doing rather than a lifecycle method name.\\r\\n\u4e0d\u540c\u7684\u903b\u8f91\u5206\u5728\u4e0d\u540c\u7684useEffect\u91cc\u9762\uff0c\u662f\u5f97\u903b\u8f91\u7ed3\u6784\u66f4\u6e05\u6670\uff0c\u8fd9\u4e2a\u5e94\u8be5\u662f\u9009\u62e9hooks\u7684\u539f\u56e0\u4e4b\u4e8c\u3002\\r\\n\\r\\n```jsx\\r\\nfunction FriendStatusWithCounter(props) {\\r\\n  const [count, setCount] = useState(0);\\r\\n  useEffect(() => {\\r\\n    document.title = `You clicked ${count} times`;\\r\\n  });\\r\\n\\r\\n  const [isOnline, setIsOnline] = useState(null);\\r\\n  useEffect(() => {\\r\\n    function handleStatusChange(status) {\\r\\n      setIsOnline(status.isOnline);\\r\\n    }\\r\\n\\r\\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\\r\\n    return () => {\\r\\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\\r\\n    };\\r\\n  });\\r\\n  // ...\\r\\n}\\r\\n```\\r\\n:::tip\\r\\nExplanation: Why Effects Run on Each Update?\\r\\n\\r\\nIf you\u2019re used to classes, you might be wondering why the effect cleanup phase happens after every re-render, \\r\\nand not just once during unmounting. Let\u2019s look at a practical example to see why this design helps us create components with fewer bugs.\\r\\n\\r\\n\u4e4b\u524d\u7684\u8bef\u89e3\u539f\u56e0\u4f7f\u7528class component\u7684\u540e\u9057\u75c7\uff0ceffect\u7684\u673a\u5236\u662fcleanup\u6bcf\u6b21\u90fd\u4f1a\u89e6\u53d1\uff0creact\u8fd9\u6837\u8bbe\u8ba1\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u51cf\u5c11bugs\\r\\n\\r\\nThis behavior ensures consistency by default and prevents bugs that are common in class components due to **missing update logic**.\\r\\n:::\\r\\n\\r\\n\u5b98\u65b9\u7684\u4f8b\u5b50\u662f\u5173\u4e8e\u597d\u53cb\u5728\u7ebf\u72b6\u6001\u7684\uff0c\u5728props\u66f4\u65b0\u7684\u60c5\u51b5\u4e0b\uff0c\u597d\u53cbA\u53ef\u80fd\u88ab\u597d\u53cbB\u66ff\u4ee3\uff0c\u4f46\u662f\u5982\u4e0b\u7684\u4f8b\u5b50\u5c31\u4f1a\u663e\u793a\u597d\u53cbB\u5728\u7ebf\uff0c\u4f46\u662fB\u53ef\u80fd\u4e0d\u5728\u7ebf\u3002\\r\\n\\r\\n```jsx\\r\\n  componentDidMount() {\\r\\n    ChatAPI.subscribeToFriendStatus(\\r\\n      this.props.friend.id,\\r\\n      this.handleStatusChange\\r\\n    );\\r\\n  }\\r\\n\\r\\n  componentWillUnmount() {\\r\\n    ChatAPI.unsubscribeFromFriendStatus(\\r\\n      this.props.friend.id,\\r\\n      this.handleStatusChange\\r\\n    );\\r\\n  }\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7compoentDidUpdate\u8fdb\u884c\u89e3\u51b3\uff0c\u5224\u65adprops\u53d8\u5316\u4e86\u4e4b\u540e\uff0c\u5173\u6389\u524d\u4e00\u4e2a\u597d\u53cbA\u7684\u94fe\u63a5\uff0c\u91cd\u65b0\u5efa\u7acb\u65b0\u597d\u53cbB\u7684\u94fe\u63a5\uff0c\u800c\u73b0\u5b9e\u4e2d\u6211\u4eec\u53ef\u80fd\u7ecf\u5e38\u5fd8\u4e86\u6dfb\u52a0\u8fd9\u4e2a\u903b\u8f91\u3002\\r\\n\u6240\u4ee5\u7528useEffect\uff0c\u6bcf\u6b21\u90fd\u4f1acleanup\u524d\u4e00\u6b21\u7684\u8bb0\u5f55\uff0c\u7136\u540e\u91cd\u65b0\u5f00\u59cbeffect update\u3002\\r\\n\\r\\n```jsx\\r\\n  componentDidMount() {\\r\\n    ChatAPI.subscribeToFriendStatus(\\r\\n      this.props.friend.id,\\r\\n      this.handleStatusChange\\r\\n    );\\r\\n  }\\r\\n\\r\\n  componentDidUpdate(prevProps) {\\r\\n    // Unsubscribe from the previous friend.id\\r\\n    ChatAPI.unsubscribeFromFriendStatus(\\r\\n      prevProps.friend.id,\\r\\n      this.handleStatusChange\\r\\n    );\\r\\n    // Subscribe to the next friend.id\\r\\n    ChatAPI.subscribeToFriendStatus(\\r\\n      this.props.friend.id,\\r\\n      this.handleStatusChange\\r\\n    );\\r\\n  }\\r\\n\\r\\n  componentWillUnmount() {\\r\\n    ChatAPI.unsubscribeFromFriendStatus(\\r\\n      this.props.friend.id,\\r\\n      this.handleStatusChange\\r\\n    );\\r\\n  }\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\n### 2-2. Tip: Optimizing Performance by Skipping Effects\\r\\n\\r\\nIn some cases, cleaning up or applying the effect after every render might create a performance problem. \\r\\nIn class components, we can solve this by writing an extra comparison with prevProps or prevState inside componentDidUpdate\\r\\n\\r\\n```jsx\\r\\ncomponentDidUpdate(prevProps, prevState) {\\r\\n  if (prevState.count !== this.state.count) {\\r\\n    document.title = `You clicked ${this.state.count} times`;\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728hooks\u4e2d\u5982\u4f55\u5904\u7406\u5462\uff1a\\r\\n\\r\\n```jsx live\\r\\nfunction Example() {\\r\\n  const [count, setCount] = useState(0);\\r\\n  const [count2, setCount2] = useState(100);\\r\\n\\r\\n  useEffect(() => {\\r\\n    console.log(\'demo3 useEffect running\');\\r\\n    document.title = `You clicked ${count} times`;\\r\\n    \\r\\n    return () => {\\r\\n      console.log(\'demo3 cleanup running\');\\r\\n    };\\r\\n  }, [count]);\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <p>You clicked {count} times, click {count2} times</p>\\r\\n      <button onClick={() => setCount(count + 1)}>\\r\\n        Click me +\\r\\n      </button>\\r\\n      <button onClick={() => setCount2(count2 - 1)}>\\r\\n        Click me -\\r\\n      </button>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n```\\r\\n\\r\\n\u8fd9\u4e2a\u4f8b\u5b50\u544a\u8bc9\u6211\u4eec\uff0cuseEffect\u53ea\u63a5\u53d7count \u53d8\u5316\u7684case\uff0c\u5bf9count2\u53d8\u5316\u662f\u4e0d\u5904\u7406\u7684\u3002\u5f53\u7136cleanup\u4e5f\u662f\u4f1a\u5904\u7406\u6bcf\u6b21count\u7684\u66f4\u65b0\u3002\u800c\u4e0d\u662f\u63a5\u53d7\u6240\u6709\u7684props\u66f4\u65b0\u3002\\r\\n**\u4e5f\u5c31\u662f\u901a\u8fc7\u9009\u62e9\u76d1\u63a7\u7684props\uff0c\u8fc7\u6ee4\u6389\u591a\u4f59render\u7684\u89e6\u53d1\u3002**\\r\\n\\r\\n### 2-3. Others\\r\\n\\r\\n:::tip\\r\\nIf you use this optimization, make sure the array includes all values from the component scope (such as props and state) \\r\\nthat change over time and that are used by the effect. \\r\\n\\r\\nOtherwise, your code will reference stale values from previous renders.\\r\\n:::\\r\\n\\r\\n\\r\\n:::tip\\r\\nIf you want to run an effect and clean it up only once (on mount and unmount), you can pass an empty array ([]) as a second argument. \\r\\nThis tells React that your effect doesn\u2019t depend on any values from props or state, so it never needs to re-run.\\r\\n\\r\\nIf you pass an empty array ([]), the props and state inside the effect will always have their initial values. \\r\\nWhile passing [] as the second argument is closer to the familiar componentDidMount and componentWillUnmount mental model,\\r\\n\\r\\nAlso, don\u2019t forget that React defers running useEffect until after the browser has painted, so doing extra work is less of a problem.\\r\\n:::\\r\\n\\r\\n\\r\\n## 3. useLayoutEffect\\r\\n\\r\\nThe signature is identical to useEffect, but it fires synchronously after all DOM mutations. \\r\\nUse this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, \\r\\nbefore the browser has a chance to paint.\\r\\n\\r\\n\u6211\u76ee\u524d\u7684\u7406\u89e3\uff0cuseEffect\u662f\u5f02\u6b65\u7684\uff0c\u5728\u6d4f\u89c8\u5668\u6e32\u67d3\u5b8c\u6210\u4e4b\u540e\u8fdb\u884c\u3002\u800cuseLayoutEffect\u662f\u540c\u6b65\u7684\uff0c\u5728\u6d4f\u89c8\u5668\u6e32\u67d3\u524d\u66f4\u65b0\uff0c\u662fblock\u6d4f\u89c8\u5668\u6e32\u67d3\u8fdb\u7a0b\u7684\u3002\\r\\n\\r\\nuseLayoutEffect \u65e0\u8bba\u4ee3\u7801\u5148\u540e\u90fd\u662f\u5728useEffect\u524d\u6267\u884c\u7684\u3002\\r\\n\\r\\n```jsx live\\r\\nfunction Example() {\\r\\n  const [count, setCount] = useState(0);\\r\\n\\r\\n  useEffect(() => {\\r\\n    console.log(\'demo4 useEffect after render\');\\r\\n    document.title = `You clicked ${count} times`;\\r\\n    \\r\\n    return ()=>{\\r\\n        console.log(\'demo4 cleanup running\');\\r\\n    }\\r\\n  });\\r\\n\\r\\n  useLayoutEffect(() => {\\r\\n    console.log(\'demo4 useLayoutEffect running\');\\r\\n\\r\\n    return ()=>{\\r\\n        console.log(\'demo4 useLayoutEffect cleanup running\');\\r\\n    }\\r\\n  });\\r\\n\\r\\n  console.log(\'demo4 update DOM\');\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <p>You clicked {count} times</p>\\r\\n      <button onClick={() => setCount(count + 1)}>\\r\\n        Click me\\r\\n      </button>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n```\\r\\n\\r\\n:::tip\\r\\nuseEffect \u662f\u5f02\u6b65\u975e\u963b\u585e\u8c03\u7528\\r\\n\\r\\nuseLayoutEffect \u662f\u540c\u6b65\u963b\u585e\u8c03\u7528\\r\\n\\r\\nuseEffect \u6d4f\u89c8\u5668\u7ed8\u5236\u540e\\r\\n\\r\\nuseLayoutEffect \u5728 DOM \u53d8\u66f4\uff08React \u7684\u66f4\u65b0\uff09\u540e\uff0c\u6d4f\u89c8\u5668\u7ed8\u5236\u524d\u5b8c\u6210\u6240\u6709\u64cd\u4f5c\\r\\n:::\\r\\n\\r\\n\\r\\n0\uff0c7\uff0c\u4e4b\u540e\u6682\u505c1\u79d2\uff0c\u51fa\u73b05\uff0c\u8bf4\u660elayoutEffect\u963b\u585e\u4e86useEffect\u3002\\r\\n\\r\\n```jsx live\\r\\nfunction FuncCom () {\\r\\n    const [counter, setCounter] = useState(0);\\r\\n\\r\\n    useEffect(() => {\\r\\n        if (counter === 2) {\\r\\n            setCounter(5)\\r\\n        }\\r\\n    });\\r\\n\\r\\n    useLayoutEffect(() => {\\r\\n        if (counter === 7) {\\r\\n            setTimeout(()=>{\\r\\n                setCounter(2)\\r\\n            }, 1000);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    return (\\r\\n        <div style={{fontSize: \'40px\'}}>\\r\\n            <button onClick={() => setCounter(7)}>{counter}</button>\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n```"},{"id":"microFE1","metadata":{"permalink":"/metaTrip/build/blog/microFE1","source":"@site/blog/2022-01-26-microFE1.mdx","title":"Micro FrontEnd Basic","description":"- \u8fd9\u662f\u6211\u5bf9\u4e8eMFE\u6bd4\u8f83\u7cfb\u7edf\u5b66\u4e60\u8bb0\u5f55\u7684\u9996\u7bc7blog","date":"2022-01-26T00:00:00.000Z","formattedDate":"January 26, 2022","tags":[{"label":"micro","permalink":"/metaTrip/build/blog/tags/micro"},{"label":"react","permalink":"/metaTrip/build/blog/tags/react"},{"label":"javaScript","permalink":"/metaTrip/build/blog/tags/java-script"}],"readingTime":14.44,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"useEffect\uff0cyou really know it?","permalink":"/metaTrip/build/blog/react1"},"nextItem":{"title":"\u5e38\u89c1\u884c\u4e1a\u6307\u6570\u57fa\u91d1","permalink":"/metaTrip/build/blog/funding-basic4"}},"content":"import react from \'react\';\\r\\n\\r\\n:::tip\\r\\n- \u8fd9\u662f\u6211\u5bf9\u4e8eMFE\u6bd4\u8f83\u7cfb\u7edf\u5b66\u4e60\u8bb0\u5f55\u7684\u9996\u7bc7blog \\r\\n- \u4e3b\u8981\u53c2\u8003\u7684Cam Jackson\u7684\u6587\u7ae0[Micro Frontends](https://martinfowler.com/articles/micro-frontends.html)\\r\\n:::\\r\\n\\r\\nCam Jackson \u662fThoughtworks\u7684\u5168\u6808\u5de5\u7a0b\u5e08\uff0c\u8fd9\u7bc7\u6587\u7ae0\u867d\u7136\u51fa\u81ea2019\u5e74\uff0c\u4f46\u662f\u5bf9\u4e8eMFE\u6982\u5ff5\u7684\u521d\u5b66\u8005\u8fd8\u662f\u53cb\u597d\u7684\uff0c\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u7684\u7406\u89e3\u3002\\r\\n\u76f8\u5e94\u7684\u6587\u7ae0\u6700\u540e\u8fd8\u63d0\u4f9b\u4e86MEF\u7684example, \u6309\u7167\u6587\u7ae0\u987a\u5e8f\u53bb\u5b66\u4e60\uff0c\u5e94\u8be5\u53ef\u4ee5\u5f88\u5feb\u5165\u95e8\u3002\u6211\u7684\u8fd9\u7bc7blog\uff0c\u7b97\u662f\u5bf9\u4ed6\u7684\u6587\u7ae0\u548c\u6211\u4e00\u70b9\u7ecf\u9a8c\u7684\u603b\u7ed3\uff0c\\r\\n\u6211\u4eec\u76f4\u63a5\u6b65\u5165\u6b63\u9898\u3002\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## 1. Micro Frontends\\r\\n\\r\\n\\"An architectural style where independently deliverable frontend applications are composed into a greater whole\\"\\r\\n\\r\\n\u8fd9\u662fCam Jackson \u6216\u8005\u8bf4\u662fThoughtworks\u5bf9MFE\u7684\u5b9a\u4e49\u3002\u6211\u4eec\u4ece\u4e2d\u53ef\u4ee5\u63d0\u53d6\u5230\u4e24\u4e2a\u91cd\u70b9\uff1a\\r\\n- independently deliverable. \u72ec\u7acb\u4ea4\u4ed8\\r\\n- composed into a greater whole. \u7ec4\u5408\u6784\u6210\u6574\u4f53\\r\\n\\r\\n### 1-1. MFE cost \\r\\n\\r\\n\u56e0\u4e3a\u540e\u9762\u6211\u4eec\u8981\u8be6\u7ec6\u89e3\u8bfb\u4e0bMFE\u7684Benefits\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e3b\u8981\u662f\u5148\u5c06\u4e00\u4e0b\u4ed6\u7684cost\uff1a\\r\\n\\r\\n:::note\\r\\nthere are no free lunches when it comes to software architecture - everything comes with a cost.\\r\\n\\r\\n- Some micro frontend implementations can lead to duplication of dependencies\\r\\n- increasing the number of bytes our users must download\\r\\n- the dramatic increase in team autonomy can cause fragmentation in the way your teams work\\r\\n\\r\\nNonetheless, we believe that these risks can be managed, and that the benefits of micro frontends often outweigh the costs\\r\\n:::\\r\\n\\r\\n\u603b\u4f53\u6765\u8bf4\uff0cMFE\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4f9d\u8d56\u91cd\u590d\uff0c\u589e\u52a0\u4e86\u9700\u8981download\u7684asset\uff0c\u8fd8\u6709\u5c31\u662f\u72ec\u7acb\u56e2\u961f\u5de5\u4f5c\u65b9\u5f0f\u4e0a\u7684\u4e00\u4e9b\u6311\u6218\u3002\u5bf9\u4e8e\u7ed3\u8bbaThoughtworks\u8ba4\u4e3a\u603b\u4f53\u4e0aMFE\u8fd8\u662f\u5229\u5927\u4e8e\u5f0a\u7684\u3002\\r\\n\u6211\u4eec\u63a5\u4e0b\u6765\u8bf4\u8bf4Benefits\u3002\\r\\n\\r\\n\\r\\n## 2. Benefits\\r\\n\\r\\n### 2-1. Incremental upgrades(\u589e\u91cf\u5347\u7ea7)\\r\\n\\r\\nThe endgame here is that we\'re afforded more freedom to make case-by-case decisions on individual parts of our product, \\r\\nand to make incremental upgrades to our architecture, our dependencies, and our user experience. \\r\\nIf there is a major breaking change in our main framework, each micro frontend can be upgraded whenever it makes sense, \\r\\nrather than being forced to stop the world and upgrade everything at once. If we want to experiment with new technology, \\r\\nor new modes of interaction, we can do it in a more isolated fashion than we could before.\\r\\n\\r\\n\u597d\u5904\u4e4b\u4e00\u5c31\u662fMFE\u7684\u5b50\u6a21\u5757\u5347\u7ea7\u662f\u81ea\u4e3b\u7684\uff0c\u5e76\u4e14\u4e0e\u4e3b\u6a21\u5757\u89e3\u8026\uff0c\u5373\u4e3b\u6a21\u5757\u6709\u8fc7\u6709\u4e9b\u5927\u7684major breaking changes\uff0c\u5b50\u6a21\u5757\u4e5f\u4e0d\u9700\u8981\u548c\u4e3b\u6a21\u5757\u540c\u6b65\u8fdb\u884c\u4fee\u6539\u548c\u5347\u7ea7\u3002\\r\\n\u800c\u662f\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u81ea\u8eab\u5408\u9002\u7684\u65f6\u673a\u6765\u8fdb\u884c\u5347\u7ea7\u3002\\r\\n\\r\\n:::tip\\r\\n\u8fd9\u91cc\u9762\u6211\u7684\u7406\u89e3\u662f\uff1a\u4e3b\u6a21\u5757\u7684\u4ee5\u6765\u8fd8\u662f\u4f1adefault\u5f71\u54cdMFE\u7684\u5b50\u6a21\u5757\u7684\uff0c\u4f46\u662f\u5b50\u6a21\u5757\u81ea\u8eab\u53ef\u4ee5\u9009\u62e9\u8981\u4e0d\u8981\u8fd9\u79cd\u5f71\u54cd\uff0c\u5373\u4f9d\u8d56\u4e3b\u6a21\u5757\u7684\u4f9d\u8d56\uff0c\\r\\n\u6216\u8005\u5173\u95ed\u4e3b\u6a21\u5757\u4f9d\u8d56\u800c\u53ea\u9009\u62e9\u81ea\u8eab\u7684\u4f9d\u8d56\uff0c\u8fd9\u6837\u5c31\u6bd4\u8f83\u7075\u6d3b\u548c\u81ea\u4e3b\u4e86\u3002\u8fd9\u6761\u6211\u4f1a\u5728\u540e\u9762\u8fdb\u884c\u76f8\u5e94\u7684\u5370\u8bc1\u3002\\r\\n:::\\r\\n\\r\\n\\r\\n### 2-2. Simple, decoupled codebases(\u7b80\u5355\uff0c\u89e3\u8026)\\r\\n\\r\\nThese smaller codebases tend to be simpler and easier for developers to work with. \\r\\nIn particular, we avoid the complexity arising from unintentional and inappropriate coupling between components \\r\\nthat should not know about each other. \\r\\n\\r\\nmicro frontends push you to be explicit and deliberate about how data and events flow \\r\\nbetween different parts of the application, which is something that we should have been doing anyway!\\r\\n\\r\\nMFE\u4e00\u5b9a\u662f\u5c0f\u800c\u7cbe\u7684\uff0c\u5c3d\u91cf\u51cf\u5c11\u7ec4\u4ef6\u95f4\u6570\u636e\u6216\u4e8b\u4ef6\u4f20\u8f93\uff0c\u8fd9\u4e00\u70b9\u9700\u8981\u6211\u4eec\u6df1\u5165\u7684\u601d\u8003\u3002\\r\\n\\r\\n\\r\\n### 2-3. Independent deployment(\u72ec\u7acb\u90e8\u7f72)\\r\\n\\r\\nJust as with microservices, independent deployability of micro frontends is key. \\r\\nThis reduces the scope of any given deployment, which in turn reduces the associated risk. \\r\\nRegardless of how or where your frontend code is hosted, each micro frontend should have \\r\\nits own continuous delivery pipeline, which builds, tests and deploys it all the way to production. \\r\\nWe should be able to deploy each micro frontend with very little thought given to the current state of \\r\\nother codebases or pipelines. It shouldn\'t matter if the old monolith is on a fixed, manual, \\r\\nquarterly release cycle, or if the team next door has pushed a half-finished or broken feature into their master branch. \\r\\nIf a given micro frontend is ready to go to production, it should be able to do so, and that decision \\r\\nshould be up to the team who build and maintain it.\\r\\n\\r\\nMFE\u662f\u9700\u8981\u5bf9\u7acb\u8fdb\u884cbuild\uff0ctest\u548cdeploy\u5230production\u7684\uff0c\u8fd9\u4e2a\u4e5f\u662f\u5176\u4e3b\u8981\u7279\u5f81\u4e4b\u4e00\uff0c\u4e5f\u662f\u4e00\u822c\u9879\u76ee\u8fdb\u884cMFE\u67b6\u6784\u91cd\u6784\u7684\u4e3b\u8981\u76ee\u7684\u3002\\r\\n\\r\\n<img src=\\"/metaTrip/build/img/blog/deployment.png\\" alt=\\"\\" style={{width: \'100%\'}}/>\\r\\n\\r\\n\\r\\n### 2-4. Autonomous teams(\u81ea\u6cbb\u56e2\u961f)\\r\\n\\r\\nTeams can have full ownership of everything they need to deliver value to customers, \\r\\nwhich enables them to move quickly and effectively\\r\\n\\r\\n\u4f9d\u8d56\u8d8a\u5c11\uff0c\u54cd\u5e94\u8d8a\u7075\u6d3b\u3002\u8fd9\u4e2a\u548c\u7b2c\u4e09\u6761\u6bd4\u8f83\u76f8\u8f85\u76f8\u6210\u3002\\r\\n\\r\\n<img src=\\"/metaTrip/build/img/blog/horizontal.png\\" alt=\\"\\" style={{width: \'100%\'}}/>\\r\\n\\r\\n\\r\\n## 3. Integration approaches\\r\\n\\r\\n:::note\\r\\n there is a micro frontend for each page in the application, and there is a single container application, which:\\r\\n- renders common page elements such as headers and footers\\r\\n- addresses cross-cutting concerns like authentication and navigation\\r\\n- brings the various micro frontends together onto the page, and tells each micro frontend when and where to render itself\\r\\n:::\\r\\n\\r\\n<img src=\\"/metaTrip/build/img/blog/composition.png\\" alt=\\"\\" style={{width: \'100%\'}}/>\\r\\n\\r\\n\\r\\n### 3-1. Server-side template composition\\r\\n\\r\\nrendering HTML on the server out of multiple templates or fragments. \\r\\nWe have an index.html which contains any common page elements, \\r\\nand then uses server-side includes to plug in page-specific content from fragment HTML files\\r\\n\\r\\n```jsx\\r\\n<html lang=\\"en\\" dir=\\"ltr\\">\\r\\n  <head>\\r\\n    <meta charset=\\"utf-8\\">\\r\\n    <title>Feed me</title>\\r\\n  </head>\\r\\n  <body>\\r\\n    <h1>\ud83c\udf7d Feed me</h1>\\r\\n    \x3c!--# include file=\\"$PAGE.html\\" --\x3e\\r\\n  </body>\\r\\n</html>\\r\\n```\\r\\n\\r\\n```jsx\\r\\nserver {\\r\\n    listen 8080;\\r\\n    server_name localhost;\\r\\n\\r\\n    root /usr/share/nginx/html;\\r\\n    index index.html;\\r\\n    ssi on;\\r\\n\\r\\n    # Redirect / to /browse\\r\\n    rewrite ^/$ http://localhost:8080/browse redirect;\\r\\n\\r\\n    # Decide which HTML fragment to insert based on the URL\\r\\n    location /browse {\\r\\n      set $PAGE \'browse\';\\r\\n    }\\r\\n    location /order {\\r\\n      set $PAGE \'order\';\\r\\n    }\\r\\n    location /profile {\\r\\n      set $PAGE \'profile\'\\r\\n    }\\r\\n\\r\\n    # All locations should render through index.html\\r\\n    error_page 404 /index.html;\\r\\n}\\r\\n```\\r\\n\\r\\nThis example shows how micro frontends is not necessarily a new technique, \\r\\nand does not have to be complicated. \\r\\nAs long as we\'re careful about how our design decisions affect the autonomy of our codebases and our teams, we can achieve many of the same benefits regardless of our tech stack.\\r\\n\\r\\n\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u4f8b\u5b50\u53ea\u662f\u8981\u544a\u8bc9\u6211\u4eec\uff0cMFE\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u65b0\u7684\u6280\u672f\uff0c\u6216\u8005\u9700\u8981\u65b0\u7684\u6280\u672f\u624d\u53ef\u4ee5\u5b9e\u73b0\u3002\\r\\n\u53ea\u8981\u6ee1\u8db3\u72ec\u7acb\u4ea4\u4ed8\uff0c\u7ec4\u5408\u6784\u6210\u6574\u4f53\u90fd\u5e94\u8be5\u662fMFE\u7684\u8303\u7574\u3002\\r\\n\\r\\n\\r\\n### 3-2. Build-time integration\\r\\n\\r\\nOne approach that we sometimes see is to publish each micro frontend as a package, \\r\\nand have the container application include them all as library dependencies. \\r\\nHere is how the container\'s package.json might look for our example app:\\r\\n\\r\\n```jsx\\r\\n{\\r\\n  \\"name\\": \\"@feed-me/container\\",\\r\\n  \\"version\\": \\"1.0.0\\",\\r\\n  \\"description\\": \\"A food delivery web app\\",\\r\\n  \\"dependencies\\": {\\r\\n    \\"@feed-me/browse-restaurants\\": \\"^1.2.3\\",\\r\\n    \\"@feed-me/order-food\\": \\"^4.5.6\\",\\r\\n    \\"@feed-me/user-profile\\": \\"^7.8.9\\"\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\ncomponent ui library \u6846\u67b6\u5c31\u662f\u4e00\u79cdbuild-time\u7684\u6a21\u5f0f\u3002\u4ed6\u7684\u5f15\u7528\u662f\u57fa\u4e8epackage\u7684\uff0c\u4f9d\u8d56\u7684\u5f62\u5f0f\u5b58\u5728\u3002\\r\\n\u5f88\u591a\u5927\u7684\u9879\u76ee\u4e5f\u662f\u8fd9\u79cd\u5047\u7684MFE\u5f00\u53d1\u65b9\u5f0f\u3002\\r\\n\\r\\nAt first this seems to make sense. It produces a single deployable Javascript bundle, \\r\\nas is usual, allowing us to de-duplicate common dependencies from our various applications. \\r\\nHowever, this approach means that we have to re-compile and release every single micro frontend \\r\\nin order to release a change to any individual part of the product. Just as with microservices, \\r\\nwe\'ve seen enough pain caused by such a lockstep release process that we would recommend \\r\\nstrongly against this kind of approach to micro frontends.\\r\\n\\r\\n\u8fd9\u79cd\u65b9\u5f0f\u7684\u4e0d\u5408\u7406\u4e4b\u5904\u5c31\u5728\u4e8ecompile\u548crelease\u90fd\u9700\u8981\u540c\u6b65\u8fdb\u884c\uff0c\u8fd9\u4e2a\u548cMFE\u72ec\u7acb\u4ea4\u4ed8\u7684\u6982\u5ff5\u662f\u7edd\u5bf9\u76f8\u53cd\u7684\uff0c\u662f\u53cdMFE\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\\r\\nWe should find a way to integrate our micro frontends at run-time, rather than at build-time.\\r\\n\\r\\n\\r\\n### 3-3. Run-time integration via iframes\\r\\n\\r\\nOne of the simplest approaches to composing applications together in the browser is the humble iframe. \\r\\nBy their nature, iframes make it easy to build a page out of independent sub-pages. \\r\\nThey also offer a good degree of isolation in terms of styling and global variables not interfering with each other.\\r\\n\\r\\n```jsx\\r\\n<html>\\r\\n  <head>\\r\\n    <title>Feed me!</title>\\r\\n  </head>\\r\\n  <body>\\r\\n    <h1>Welcome to Feed me!</h1>\\r\\n\\r\\n    <iframe id=\\"micro-frontend-container\\"></iframe>\\r\\n\\r\\n    <script type=\\"text/javascript\\">\\r\\n      const microFrontendsByRoute = {\\r\\n        \'/\': \'https://browse.example.com/index.html\',\\r\\n        \'/order-food\': \'https://order.example.com/index.html\',\\r\\n        \'/user-profile\': \'https://profile.example.com/index.html\',\\r\\n      };\\r\\n\\r\\n      const iframe = document.getElementById(\'micro-frontend-container\');\\r\\n      iframe.src = microFrontendsByRoute[window.location.pathname];\\r\\n    <\/script>\\r\\n  </body>\\r\\n</html>\\r\\n```\\r\\n\\r\\nIt can be difficult to build integrations between different parts of the application, \\r\\nso they make routing, history, and deep-linking more complicated, \\r\\nand they present some extra challenges to making your page fully responsive.\\r\\n\\r\\niframes\u89c9\u5f97\u662fMFE\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u6211\u4eec\u4e3b\u8981\u8003\u8651\u5230\u7075\u6d3b\u6027\u7684\u4e00\u4e9b\u95ee\u9898\u800c\u4e0d\u53bb\u91c7\u7528\u5b83\u3002\u6bd4\u5982responsive\u7684\u5b9e\u73b0\u5c31\u5f88\u56f0\u96be\u3002\\r\\n\\r\\n\\r\\n### 3-4. Run-time integration via JavaScript(\u4e3b\u8981\u5b9e\u73b0\u65b9\u5f0f)\\r\\n\\r\\nprobably the most flexible one, and the one that we see teams adopting most frequently. \\r\\nEach micro frontend is included onto the page using a **script** tag, and upon load exposes a global function as its entry-point. \\r\\nThe container application then determines which micro frontend should be mounted, \\r\\nand calls the relevant function to tell a micro frontend when and where to render itself.\\r\\n\\r\\n```jsx\\r\\n<html>\\r\\n  <head>\\r\\n    <title>Feed me!</title>\\r\\n  </head>\\r\\n  <body>\\r\\n    <h1>Welcome to Feed me!</h1>\\r\\n\\r\\n    \x3c!-- These scripts don\'t render anything immediately --\x3e\\r\\n    \x3c!-- Instead they attach entry-point functions to `window` --\x3e\\r\\n    <script src=\\"https://browse.example.com/bundle.js\\"><\/script>\\r\\n    <script src=\\"https://order.example.com/bundle.js\\"><\/script>\\r\\n    <script src=\\"https://profile.example.com/bundle.js\\"><\/script>\\r\\n\\r\\n    <div id=\\"micro-frontend-root\\"></div>\\r\\n\\r\\n    <script type=\\"text/javascript\\">\\r\\n      // These global functions are attached to window by the above scripts\\r\\n      const microFrontendsByRoute = {\\r\\n        \'/\': window.renderBrowseRestaurants,\\r\\n        \'/order-food\': window.renderOrderFood,\\r\\n        \'/user-profile\': window.renderUserProfile,\\r\\n      };\\r\\n      const renderFunction = microFrontendsByRoute[window.location.pathname];\\r\\n\\r\\n      // Having determined the entry-point function, we now call it,\\r\\n      // giving it the ID of the element where it should render itself\\r\\n      renderFunction(\'micro-frontend-root\');\\r\\n    <\/script>\\r\\n  </body>\\r\\n</html>\\r\\n```\\r\\n\\r\\nThe above is obviously a primitive example, but it demonstrates the basic technique. \\r\\nUnlike with build-time integration, we can deploy each of the bundle.js files independently.\\r\\nAnd unlike with iframes, we have full flexibility to build integrations between our micro frontends however we like. \\r\\nWe could extend the above code in many ways, for example to only download each JavaScript bundle as needed, \\r\\nor to pass data in and out when rendering a micro frontend.The flexibility of this approach, combined with the independent \\r\\ndeployability, makes it our default choice, and the one that we\'ve seen in the wild most often.\\r\\n\\r\\n\u8fd9\u79cd\u65b9\u5f0f\u4e0eiframe\u76f8\u6bd4\uff0c\u53ef\u4ee5\u89e3\u51b3\u5b50\u6a21\u5757\u95f4\u7684\u540c\u6b65\u534f\u4f5c\u95ee\u9898\uff0c\u6bd4\u5982responsive\u3002\u4e0ebuild-time\u76f8\u6bd4\uff0c\u53ef\u4ee5\u72ec\u7acb\u4ea4\u4ed8\u3002\u800c\u4e14\u8fd8\u53ef\u4ee5\u6309\u9700\u52a0\u8f7d\u3002\\r\\n\u6240\u4ee5\u6210\u4e3a\u4e86MFE\u5b9e\u73b0\u7684\u6700\u4e3b\u8981\u65b9\u5f0f\u3002\\r\\n\\r\\n\\r\\n### 3-5. Run-time integration via Web Components\\r\\n\\r\\n for each micro frontend to define an HTML custom element for the container to instantiate, \\r\\n instead of defining a global function for the container to call.\\r\\n\\r\\n ```jsx\\r\\n<html>\\r\\n  <head>\\r\\n    <title>Feed me!</title>\\r\\n  </head>\\r\\n  <body>\\r\\n    <h1>Welcome to Feed me!</h1>\\r\\n\\r\\n    \x3c!-- These scripts don\'t render anything immediately --\x3e\\r\\n    \x3c!-- Instead they each define a custom element type --\x3e\\r\\n    <script src=\\"https://browse.example.com/bundle.js\\"><\/script>\\r\\n    <script src=\\"https://order.example.com/bundle.js\\"><\/script>\\r\\n    <script src=\\"https://profile.example.com/bundle.js\\"><\/script>\\r\\n\\r\\n    <div id=\\"micro-frontend-root\\"></div>\\r\\n\\r\\n    <script type=\\"text/javascript\\">\\r\\n      // These element types are defined by the above scripts\\r\\n      const webComponentsByRoute = {\\r\\n        \'/\': \'micro-frontend-browse-restaurants\',\\r\\n        \'/order-food\': \'micro-frontend-order-food\',\\r\\n        \'/user-profile\': \'micro-frontend-user-profile\',\\r\\n      };\\r\\n      const webComponentType = webComponentsByRoute[window.location.pathname];\\r\\n\\r\\n      // Having determined the right web component custom element type,\\r\\n      // we now create an instance of it and attach it to the document\\r\\n      const root = document.getElementById(\'micro-frontend-root\');\\r\\n      const webComponent = document.createElement(webComponentType);\\r\\n      root.appendChild(webComponent);\\r\\n    <\/script>\\r\\n  </body>\\r\\n</html>\\r\\n```\\r\\n\\r\\nthe main difference being that you are opting in to doing things \'the web component way\'. \\r\\nIf you like the web component spec, and you like the idea of using capabilities that the browser provides, \\r\\nthen this is a good option. If you prefer to define your own interface between the container \\r\\napplication and micro frontends, then you might prefer the previous example instead.\\r\\n\\r\\n\u5982\u679c\u4e0d\u9700\u8981\u8003\u8651IE\u6d4f\u89c8\u5668\uff0c\u4e5f\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\\r\\n\\r\\n\\r\\n\\r\\n## 4. Styling\\r\\n\\r\\nIn a micro frontends landscape, many of these problems are exacerbated. For example,\\r\\nif one team\'s micro frontend has a stylesheet that says h2 { color: black; }, \\r\\nand another one says h2 { color: blue; }, and both these selectors are attached to the same page, \\r\\nthen someone is going to be disappointed! This is not a new problem, \\r\\nbut it\'s made worse by the fact that these selectors were written by different teams at different times, \\r\\nand the code is probably split across separate repositories, making it more difficult to discover.\\r\\n\\r\\n:::tip\\r\\nMFE\u4e3b\u8981\u662f\u89e3\u51b3css\u7684\u6837\u5f0f\u91cd\u540d\u95ee\u9898\uff0c\u76ee\u524d\u7684css\u6709\u591a\u79cd\u5199\u6cd5\u6765\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c BEM\uff0csass/less, css in js.\\r\\n\u6211\u76ee\u524d\u5bf9\u8fd9\u4e2a\u5177\u4f53\u7684\u89e3\u51b3\u65b9\u5f0f\u8fd8\u6709\u5f85\u7406\u89e3\uff0c\u540e\u9762\u6211\u4f1a\u53bb\u5370\u8bc1\u4e00\u4e0b\u3002\\r\\n:::\\r\\n\\r\\n\\r\\n\\r\\n## 5. Shared component libraries\\r\\n\\r\\nWe mentioned above that visual consistency across micro frontends is important, \\r\\nand one approach to this is to develop a library of shared, re-usable UI components. \\r\\nIn general we believe that this a good idea, although it is difficult to do well. \\r\\nThe main benefits of creating such a library are reduced effort through re-use of code, \\r\\nand visual consistency. In addition, your component library can serve as a living styleguide, \\r\\nand it can be a great point of collaboration between developers and designers.\\r\\n\\r\\n\\r\\n\u7b80\u5355\u6765\u8bf4\uff0cMFE\u4e5f\u662f\u9700\u8981\u540c\u610f\u89c6\u89c9UI \u6807\u51c6\u7684\uff0c\u8fd9\u8d8b\u52bf\u5c31\u9700\u8981\u4e00\u4e2acomponent ui \u5e93\u6765\u652f\u6301\u3002\u6bd4\u5982mui\uff0cbootstrap\u3002\\r\\n\u6216\u8005\u662f\u9879\u76ee\u81ea\u5efa\uff0c\u81ea\u5efa\u7684\u65b9\u5f0f\u53ef\u4ee5\u662f\u4ece\u591a\u4e2a\u5b50\u6a21\u5757\u4e2d\u62bd\u53d6common\u7684\u7ec4\u4ef6\u3002\u800c\u4e0d\u7528day1\u7684\u65f6\u5019\u5c31\u6784\u5efa\u3002\\r\\n\u4f46\u662f\u8fd9\u4e2acomponent ui \u5e93\u662f\u9700\u8981\u7684\u3002 \\r\\n\\r\\n:::tip\\r\\n\u6211\u9700\u8981\u5728\u9879\u76ee\u4e2d\u8fdb\u4e00\u6b65\u5370\u8bc1\u4e00\u4e0b\u3002\u6bd4\u5982BRP\u548cNew UI MFE\u7684\u5173\u7cfb\\r\\n:::\\r\\n\\r\\n\\r\\n## 6. Cross-application communication\\r\\n\\r\\nOne of the most common questions regarding micro frontends is **how to let them talk to each other**. \\r\\nIn general, we recommend having them communicate as little as possible, \\r\\nas it often reintroduces the sort of inappropriate coupling that we\'re seeking to avoid in the first place.\\r\\n\\r\\nThat said, some level of cross-app communication is often needed. \\r\\n- Custom events allow micro frontends to communicate indirectly, which is a good way to minimise direct coupling, \\r\\nthough it does make it harder to determine and enforce the contract that exists between micro frontends. \\r\\n- Alternatively, the React model of passing callbacks and data downwards (in this case downwards from the container \\r\\napplication to the micro frontends) is also a good solution that makes the contract more explicit. \\r\\n- A third alternative is to use the address bar as a communication mechanism.\\r\\n\\r\\nWhatever approach we choose, we want our micro frontends to communicate by sending messages or events to each other, \\r\\nand avoid having any shared state. \\r\\n\\r\\nJust like sharing a database across microservices, as soon as we share our data structures and domain models, \\r\\nwe create massive amounts of coupling, and it becomes extremely difficult to make changes.\\r\\n\\r\\n\u8fd9\u5757\u6211\u73b0\u5728\u8fd8\u7406\u89e3\u4e0d\u5230\u4f4d\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u4e9bPOC\uff0c\u4e4b\u540e\u4f1a\u53e6\u5916\u8be6\u7ec6\u5199\u4e00\u7bc7blog\u3002"},{"id":"funding-basic4","metadata":{"permalink":"/metaTrip/build/blog/funding-basic4","source":"@site/blog/2022-01-23-f4.mdx","title":"\u5e38\u89c1\u884c\u4e1a\u6307\u6570\u57fa\u91d1","description":"- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82823","date":"2022-01-23T00:00:00.000Z","formattedDate":"January 23, 2022","tags":[{"label":"funding","permalink":"/metaTrip/build/blog/tags/funding"}],"readingTime":2.88,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"Micro FrontEnd Basic","permalink":"/metaTrip/build/blog/microFE1"},"nextItem":{"title":"\u5e38\u89c1\u5bbd\u57fa\u6307\u6570\u57fa\u91d1(\u4e8c)","permalink":"/metaTrip/build/blog/funding-basic3"}},"content":":::tip\\r\\n- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82823\\r\\n- \u5c0f\u767d\u5b66\u4e60\uff0c\u5207\u52ff\u76f2\u76ee\u8ddf\u4ece\\r\\n:::\\r\\n\\r\\n\\r\\n## \u5e38\u89c1\u884c\u4e1a\u6307\u6570\u57fa\u91d1\\r\\n\\r\\n\u6307\u6570\u57fa\u91d1\u4e13\u95e8\u6295\u8d44\u67d0\u4e2a\u884c\u4e1a\u7684\u80a1\u7968\uff0c\u4e5f\u5c31\u662f\u884c\u4e1a\u6307\u6570\u57fa\u91d1\u3002\u884c\u4e1a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u98ce\u9669\u66f4\u9ad8\u3002\\r\\n\u6709\u65f6\u5019\u5bbd\u57fa\u503c\u6307\u6570\u57fa\u91d1\u6ca1\u6709\u592a\u597d\u673a\u4f1a\u7684\u65f6\u5019\uff0c\u884c\u4e1a\u6307\u6570\u57fa\u91d1\u5bf9\u6211\u4eec\u6295\u8d44\u8d77\u5230\u5f88\u597d\u7684\u8865\u5145\u4f5c\u7528\u3002\\r\\n\\r\\n> \u5efa\u8bae\u65b0\u624b\u4ece\u5bbd\u57fa\u6307\u6570\u57fa\u91d1\u5165\u95e8\uff0c\u79ef\u7d2f\u8db3\u591f\u7ecf\u9a8c\u4e4b\u540e\u5728\u6295\u8d44\u884c\u4e1a\u6307\u6570\u57fa\u91d1\u3002\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n### 10\u4e2a\u4e00\u7ea7\u884c\u4e1a\\r\\n\\r\\n\u540d\u79f0 | \u5305\u542b | \u4e2d\u8bc1800\u4e00\u7ea7\u884c\u4e1a\u6307\u65702004~2017 | \u76f8\u5173\u6307\u6570\u53ca\u7279\u70b9 | \u517b\u8001\u4ea7\u4e1a\\r\\n--|--|--|--|--\\r\\n\u6750\u6599 | \u91d1\u5c5e\uff0c\u91c7\u77ff\uff0c\u5316\u5b66\u5236\u54c1 | 2.6 | |\\r\\n\u53ef\u9009\u6d88\u8d39 | \u6c7d\u8f66\uff0c\u96f6\u552e\uff0c \u5a92\u4f53\uff0c\u623f\u5730\u4ea7\uff0c\u5f71\u89c6\u4e1a | 4.7 | \u9700\u6c42\u6bd4\u5fc5\u987b\u6d88\u8d39\u5f31\uff0c\u6709\u4e00\u5b9a\u5468\u671f\u6027\uff08\u623f\u5730\u4ea7\uff09\u3002\u4e2d\u8bc1\u5168\u6307\u53ef\u9009\u6d88\u8d39\u6307\u6570 | \u4e3b\u8981\u5305\u62ec\\r\\n\u5fc5\u987b\u6d88\u8d39\uff08\u65e5\u5e38\u6d88\u8d39\uff0c\u4e3b\u8981\u6d88\u8d39\uff09 | \u98df\u54c1\uff0c\u70df\u8349\uff0c\u5bb6\u5177\uff0c\u996e\u6599\uff0c\u9152\uff0c\u519c\u526f\u98df\u54c1 | 9.0 | \u7a33\u5b9a\u3002\u4e0a\u8bc1\uff0c\u4e0a\u8bc180\uff0c\u4e2d\u8bc1800\uff0c\u5168\u6307\u6d88\u8d39\u6307\u6570 | \u4e3b\u8981\u5305\u62ec \\r\\n\u80fd\u6e90 | \u80fd\u6e90\u8bbe\u5907\u4e0e\u670d\u52a1\uff0c\u77f3\u6cb9\u5929\u7136\u6c14 | 2.0 | |\\r\\n\u91d1\u878d | \u94f6\u884c\uff0c \u4fdd\u9669\uff0c\u5238\u5546 | 5.2 | \u5468\u671f\u6027\uff0c\u653f\u7b56 |\\r\\n\u533b\u836f | \u533b\u7597\u4fdd\u5065\uff0c\u5236\u836f\uff0c\u751f\u7269\u79d1\u6280 | 9.3 | \u7a33\u5b9a\uff0c\u4e2d\u8bc1800\u533b\u836f\uff0c\u4e0a\u8bc1\u533b\u836f\uff0c\u7ec6\u5206\u533b\u836f\uff0c300/500\u533b\u836f\u6307\u6570\u7b49 | \u4e3b\u8981\u5305\u62ec\\r\\n\u5de5\u4e1a | \u822a\u7a7a\u822a\u5929\uff0c\u8fd0\u8f93\uff0c\u5efa\u7b51\u4ea7\u54c1 | 3 | |\\r\\n\u4fe1\u606f | \u786c\u4ef6\uff0c\u8f6f\u4ef6\uff0c\u4fe1\u606f\u6280\u672f | 3.5 | |\\r\\n\u7535\u4fe1 | \u56fa\u5b9a\u7ebf\u8def\uff0c\u65e0\u7ebf\u901a\u4fe1\uff0c\u7535\u4fe1\u4e1a\u52a1 | 4.6 | |\\r\\n\u516c\u5171\u4e8b\u4e1a | \u7535\u529b\uff0c\u5929\u7136\u6c14\uff0c\u6c34 | 2.4 | |\\r\\n\\r\\n> #### \u503c\u5f97\u6295\u8d44\u7684\u884c\u4e1a\\r\\n- \u5929\u751f\u66f4\u5bb9\u6613\u8d5a\u94b1\u7684\u884c\u4e1a \uff08\u6d88\u8d39\u548c\u533b\u836f\u884c\u4e1a\uff09\\r\\n- \u5177\u6709\u660e\u663e\u5f3a\u5468\u671f\u7684\u884c\u4e1a \uff08\u4f4e\u4e70\u9ad8\u5356\uff0c\u91d1\u878d\u4e1a\u5730\u4ea7\uff0c\u80fd\u6e90\uff0c\u90e8\u5206\u6750\u6599\u884c\u4e1a\uff09\\r\\n\\r\\n> #### \u5f00\u516c\u53f8\u5982\u4f55\u624d\u80fd\u8d5a\u5230\u94b1 \uff08\u8305\u53f0\uff0c\u53ef\u53e3\u53ef\u4e50\uff09\\r\\n- \u5ba2\u6237\u9700\u6c42\u80fd\u591f\u6301\u7eed\u7a33\u5b9a\\r\\n- \u4ea7\u54c1\u522b\u4eba\u6a21\u4eff\u4e0d\u4e86\uff0c\u4f01\u4e1a\u6709\u62a4\u57ce\u6cb3\u80fd\u4fdd\u8bc1\u4e00\u5b9a\u5229\u6da6\u7387\\r\\n- \u518d\u6295\u8d44\u9700\u6c42\u5c0f\uff0c\u80fd\u591f\u6d3b\u5f97\u5927\u91cf\u81ea\u7531\u73b0\u91d1\u6d41\\r\\n- \u4e8c\u7ea7\u5e02\u573a\u8fd8\u8981\u4e00\u4e2a\u6761\u4ef6\uff1a\u4f01\u4e1a\u613f\u610f\u56de\u9988\u80a1\u4e1c\uff0c\u800c\u4e0d\u662f\u4e71\u82b1\u94b1\\r\\n\\r\\n\\r\\n> #### \u5176\u4ed6\u6709\u7279\u5b9a\u884c\u4e1a\\r\\n- \u5730\u4ea7\u884c\u4e1a\uff0c\u519b\u5de5\u884c\u7ea6\uff0c\u73af\u4fdd\u884c\u4e1a\uff0c\u767d\u9152\u884c\u4e1a"},{"id":"funding-basic3","metadata":{"permalink":"/metaTrip/build/blog/funding-basic3","source":"@site/blog/2022-01-14-f3.mdx","title":"\u5e38\u89c1\u5bbd\u57fa\u6307\u6570\u57fa\u91d1(\u4e8c)","description":"- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82823","date":"2022-01-14T00:00:00.000Z","formattedDate":"January 14, 2022","tags":[{"label":"funding","permalink":"/metaTrip/build/blog/tags/funding"}],"readingTime":2.81,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"\u5e38\u89c1\u884c\u4e1a\u6307\u6570\u57fa\u91d1","permalink":"/metaTrip/build/blog/funding-basic4"},"nextItem":{"title":"\u5e38\u89c1\u5bbd\u57fa\u6307\u6570\u57fa\u91d1(\u4e00)","permalink":"/metaTrip/build/blog/funding-basic2"}},"content":":::tip\\r\\n- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82823\\r\\n- \u5c0f\u767d\u5b66\u4e60\uff0c\u5207\u52ff\u76f2\u76ee\u8ddf\u4ece\\r\\n:::\\r\\n\\r\\n\\r\\n## \u5e38\u89c1\u5bbd\u57fa\u6307\u6570\u57fa\u91d1\\r\\n\\r\\n\u5e8f\u53f7|\u540d\u79f0|\u6307\u6570\u7b80\u4ecb|\u80a1\u7968\u4e2a\u6570\\r\\n--|--|--|--\\r\\n10 | \u4e2d\u8bc1\u57fa\u672c\u976250\u6307\u6570(000925, 399925) | \u6309\u71674\u4e2a\u57fa\u672c\u9762\u6307\u6807\uff0c\u6311\u9009\u7efc\u5408\u6700\u5f3a\u768450\u4e2a\u516c\u53f8 | 50\\r\\n10 | \u592e\u89c6\u8d22\u7ecf50\u6307\u6570(399550) | \u592e\u89c6\u8054\u5408\u9ad8\u6821\u4e13\u5bb6\u6311\u9009, \u5ffd\u7565 | 50\\r\\n10 | \u6052\u751f\u6307\u6570(HSI) | \u6e2f\u4ea4\u6240, DQII \u4ee3\u8d2d\uff0c\u9999\u6e2f\u4e0a\u5e02\u89c4\u6a21\u6700\u592750\u5bb6 | 50\\r\\n10 | H \u80a1\u6307\u6570(\u6052\u751f\u4e2d\u56fd\u4f01\u4e1a\u6307\u6570) | \u516c\u53f8\u5728\u5185\u5730\u6ce8\u518c\uff0c\u9999\u6e2f\u4e0a\u5e02\u5c31\u662fH\u80a1\uff0c\u6311\u9009\u7684\u662f40\u5bb6\u6700\u5927\u7684H\u80a1 | 40\\r\\n10 | \u4e0a\u8bc150AH\u4f18\u9009\u6307\u6570 | 27\u7eafA\uff0c23\u540c\u65f6\u5177\u6709AH\u516c\u53f8\u4e2d\u76f8\u5bf9\u4fbf\u5b9c\u7684\u90a3\u4e00\u7c7b | 50\\r\\n10 | \u7eb3\u65af\u8fbe\u514b100\u6307\u6570(NDX) | \u7f8e\u56fd\u80a1\u5e02\uff0c\u7eb3\u65af\u8fbe\u514b\u6700\u5927100\u5bb6\uff0cDQII\u4ee3\u8d2d | 100\\r\\n10 | \u6807\u666e500\u6307\u6570 | \u7c7b\u4f3c\u56fd\u5185\u7684\u6caa\u6df1300 | 300\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n> ### \u57fa\u672c\u9762\u6307\u6570\u7279\u70b9\\r\\n- \u53e6\u4e00\u79cd\u52a0\u6743\u7b56\u7565\uff0c4\u4e2a\u7ef4\u5ea6\u6765\u8861\u91cf\uff0c\u8425\u4e1a\u6536\u5165\uff0c\u73b0\u91d1\u6d41\uff0c\u51c0\u8d44\u4ea7\u548c\u5206\u7ea2\u3002\\r\\n- \u5f80\u5f80\u4e5f\u90fd\u662f\u5927\u76d8\u80a1\uff0c\u548c\u4e0a\u8bc150\u6307\u6570\u76f8\u4f3c\uff0c\u5355\u6311\u9009\u80a1\u4ece4\u4e2a\u7ef4\u5ea6\u51fa\u53d1\uff0c\u4f1a\u8003\u8651\u66f4\u5168\u9762\u4e9b\u3002\\r\\n\\r\\n> ### QDII \u57fa\u91d1\\r\\n- \u6295\u8d44\u4e8e\u9999\u6e2f\uff0c\u7f8e\u56fd\u7b49\u5e02\u573a\u7684\u57fa\u91d1\u54c1\u79cd\\r\\n- \u8fd9\u79cd\u57fa\u91d1\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\u2018\u4ee3\u8d2d\u2019\\r\\n- \u6709\u6682\u505c\u7533\u8d2d\uff0c\u53ef\u4ee5\u8d4e\u56de\u7684\u98ce\u9669\uff0c\u5185\u5730\u5e02\u573a\u6682\u65f6\u4e0d\u6210\u719f\\r\\n\\r\\n> ### H\u80a1\u6307\u6570\u7279\u70b9\\r\\n- \u6709\u91cd\u590d\uff0c\u4f46\u4e0d\u662f\u6052\u751f\u6307\u6570\\r\\n- \u4ee5\u5883\u5916\u6295\u8d44\u8005\u4e3a\u4e3b\\r\\n- \u4e0eA\u80a1\u6307\u6570\u6709\u5bc6\u5207\u7684\u5173\u7cfb\uff0c\u5f88\u591a\u516c\u53f8\u5728A\u80a1\u548cH\u80a1\u90fd\u6709\u4e0a\u5e02\uff0c\u6bd4\u5982H\u80a1\u6307\u6570\u548c\u4e0a\u8bc150\u91cd\u5408\u5ea6\u9ad8\uff0c\u4e0a\u8bc150\u662f\u4e2d\u56fd\u6295\u8d44\u8005\u4e3a\u4e3b\uff0c\\r\\nH\u80a1\u6307\u6570\u662f\u6b27\u7f8e\u6295\u8d44\u8005\u4e3a\u4e3b\uff0c \u4e24\u8005\u7684\u6da8\u8dcc\u6709\u65f6\u5dee\uff0c\u5e76\u4e0d\u4e25\u683c\u540c\u6b65\uff0c\u4f46\u662f\u957f\u671f\u8d8b\u52bf\u4e00\u81f4\uff0c\u6240\u4ee5\u4e70\u5165AH\u80a1\u4e2d\u76f8\u5bf9\u4fbf\u5b9c\u7684\uff0c\u5356\u51fa\u8d35\u7684\u662f\u5176\u7b56\u7565\\r\\n\\r\\n\\r\\n\u540d\u79f0|\u63cf\u8ff0\\r\\n--|--\\r\\n\u4e0a\u8bc150\u6307\u6570 | 27\u7eafA\uff0c23\u540c\u65f6\u5177\u6709AH\u516c\u53f8\u4e2d\u7684A\u80a1\\r\\n50AH\u4f18\u9009\u6307\u6570 | 27\u7eafA\uff0c23\u540c\u65f6\u5177\u6709AH\u516c\u53f8\u4e2d\u76f8\u5bf9\u4fbf\u5b9c\u7684\u90a3\u4e00\u7c7b\\r\\nH\u80a1\u6307\u6570 | 17\u7eafH\uff0c23\u540c\u65f6\u5177\u6709AH\u516c\u53f8\u4e2d\u7684H\u80a1"},{"id":"funding-basic2","metadata":{"permalink":"/metaTrip/build/blog/funding-basic2","source":"@site/blog/2022-01-11-f2.mdx","title":"\u5e38\u89c1\u5bbd\u57fa\u6307\u6570\u57fa\u91d1(\u4e00)","description":"- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82823","date":"2022-01-11T00:00:00.000Z","formattedDate":"January 11, 2022","tags":[{"label":"funding","permalink":"/metaTrip/build/blog/tags/funding"}],"readingTime":6.045,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"\u5e38\u89c1\u5bbd\u57fa\u6307\u6570\u57fa\u91d1(\u4e8c)","permalink":"/metaTrip/build/blog/funding-basic3"},"nextItem":{"title":"How to use Storybook 2","permalink":"/metaTrip/build/blog/storybook-usage2"}},"content":":::tip\\r\\n- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82823\\r\\n- \u5c0f\u767d\u5b66\u4e60\uff0c\u5207\u52ff\u76f2\u76ee\u8ddf\u4ece\\r\\n:::\\r\\n\\r\\n## \u6307\u6570\u57fa\u91d1\u5206\u7c7b\\r\\n\\r\\n\u6700\u5e38\u89c1\u7684\u5206\u7c7b\u5c31\u662f\u5bbd\u57fa\u6307\u6570\u548c\u884c\u4e1a\u6307\u6570\u3002\\r\\n\\r\\n- \u6307\u6570\u57fa\u91d1\u5728\u6311\u9009\u80a1\u7968\u7684\u65f6\u5019\uff0c\u4e0d\u9650\u5236\u6295\u8d44\u884c\u4e1a\uff0c\u5c31\u662f**\u5bbd\u57fa\u6307\u6570\u57fa\u91d1**\u3002\\r\\n- \u6307\u6570\u57fa\u91d1\u5728\u6311\u9009\u80a1\u7968\u7684\u65f6\u5019\uff0c\u9650\u5236\u6295\u8d44\u884c\u4e1a\uff0c\u5c31\u662f**\u884c\u4e1a\u6307\u6570\u57fa\u91d1**\u3002\u884c\u4e1a\u6307\u6570\u57fa\u91d1\u53d7\u884c\u4e1a\u7279\u6027\u7684\u5f71\u54cd\u975e\u5e38\u5927\u3002\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n\u4ece\u4ea4\u6613\u6e20\u9053\u4e0a\u53ef\u4ee5\u5206\u4e3a\u573a\u5185\u6307\u6570\u57fa\u91d1\u548c\u573a\u5916\u6307\u6570\u57fa\u91d1\uff0c\u8fd9\u4e2a\u573a\u6307\u7684\u662f\u8bc1\u5377\u4ea4\u6613\u6240\u3002\\r\\n\\r\\n- \u573a\u5185\u6307\u6570\u57fa\u91d1\u5728\u8bc1\u5377\u4ea4\u6613\u6240\u4e0a\u5e02\uff0c\u53ef\u4ee5\u6709\u2018\u7533\u8d2d\u8d4e\u56de\u2019\u548c\u2018\u4e70\u5165\u5356\u51fa\u2019\u4e24\u5957\u4ea4\u6613\u4f53\u7cfb\uff0c\u5176\u4e2d\u4e70\u5165\u5356\u51fa\u65b9\u5f0f\u9700\u8981\u5728\u8bc1\u5377\u4ea4\u6613\u6240\u8fdb\u884c\\r\\n- \u573a\u5916\u57fa\u91d1\uff0c\u4e0d\u5728\u8bc1\u5377\u4ea4\u6613\u6240\u4e0a\u5e02\uff0c\u53ea\u6709\u2018\u7533\u8d2d\u8d4e\u56de\u2019\u4e00\u79cd\\r\\n- \u573a\u5185\u57fa\u91d1\u4e3b\u8981\u6709\u4e24\u79cd\uff1aETF\u548cLOF\u57fa\u91d1\uff0c\u8fd9\u4e24\u79cd\u57fa\u91d1\u90fd\u6709\u53ef\u4ee5\u5728\u4ea4\u6613\u6240\u8fdb\u884c\u81ea\u7531\u4e70\u5356\uff0c\u4e0d\u540c\u7684\u662f\uff0cETF\u53ea\u80fd\u901a\u8fc7\u80a1\u7968\u4ea4\u6613\u8f6f\u4ef6\u4ea4\u6613\uff0cLOF\u9664\u6b64\u4e4b\u5916\u8fd8\u53ef\u4ee5\u50cf\u573a\u5916\u57fa\u91d1\u4e00\u6837\u901a\u8fc7\u2018\u7533\u8d2d\u8d4e\u56de\u2019\u65b9\u5f0f\u4ea4\u6613\\r\\n\\r\\n\\r\\n## \u5e38\u89c1\u5bbd\u57fa\u6307\u6570\u57fa\u91d1\\r\\n\\r\\n\u5e8f\u53f7|\u540d\u79f0|\u6307\u6570\u7b80\u4ecb|\u80a1\u7968\u4e2a\u6570\\r\\n--|--|--|--\\r\\n1| \u4e0a\u8bc150\u6307\u6570(000016) |\u662f\u4ece\u4e0a\u4ea4\u6240\u6311\u9009\u7684\u6caa\u5e02\u89c4\u6a21\u6700\u5927\uff0c\u6d41\u52a8\u6027\u597d\uff0c\u6700\u5177\u4ee3\u8868\u6027\u768450\u53ea\u80a1\u7968\u7ec4\u6210\u7684\u6837\u672c| 50 \\r\\n2| \u6caa\u6df1300\u6307\u6570(000300, 399300)| \u662f\u4e2d\u8bc1\u6307\u6570\u516c\u53f8\u5f00\u53d1\u7684\uff0c\u4ece\u4e0a\u4ea4\u6240\u548c\u6df1\u4ea4\u6240\u6311\u9009\u7684\uff0c\u89c4\u6a21\u6700\u5927\uff0c\u6d41\u52a8\u6027\u597d\u7684300\u53ea\u80a1\u7968| 300 \\r\\n3| \u4e2d\u8bc1500\u6307\u6570(000905,399905) | \u662f\u4e2d\u8bc1\u6307\u6570\u516c\u53f8\u5f00\u53d1\u7684\uff0c\u4ece\u4e0a\u4ea4\u6240\u548c\u6df1\u4ea4\u6240\u6311\u9009\u7684\uff0c\u6392\u9664\u6caa\u6df1300\u7684\uff0c\u56fd\u5185\u4e2d\u578b\u516c\u53f8\u4ee3\u8868| 500\\r\\n4| \u521b\u4e1a\u677f\u6307\u6570(399006)| \u521b\u4e1a\u677f\u6700\u4e3b\u8981100\u5bb6\u4f01\u4e1a| 100\\r\\n5| \u521b\u4e1a\u677f50\u6307\u6570(399673)| \u521b\u4e1a\u677f\u6700\u4e3b\u898150\u5bb6\u4f01\u4e1a| 50\\r\\n6| \u4e0a\u8bc1\u7ea2\u5229\u6307\u6570(000015) | \u6700\u8001\u724c\uff0c\u5927\u76d8\u80a1\u4e3a\u4e3b\uff0c\u4e0a\u4ea4\u6240\u8fc7\u53bb\u4e24\u5e74\u5e73\u5747\u73b0\u91d1\u80a1\u606f\u7387\u6700\u9ad8\u768450\u53ea\u80a1\u7968| 50\\r\\n7| \u4e2d\u8bc1\u7ea2\u5229\u6307\u6570(000922\uff0c399922) | \u4ece\u4e0a\u4ea4\u6240\u548c\u6df1\u4ea4\u6240\u6311\u9009\uff0c\u8fc7\u53bb\u4e24\u5e74\u5e73\u5747\u73b0\u91d1\u80a1\u606f\u7387\u6700\u9ad8\u7684100\u53ea\u80a1\u7968| 100\\r\\n8| \u6df1\u8bc1\u7ea2\u5229\u6307\u6570(399324) | \u6df1\u4ea4\u6240\u8fc7\u53bb\u4e24\u5e74\u5e73\u5747\u73b0\u91d1\u80a1\u606f\u7387\u6700\u9ad8\u768440\u53ea\u80a1\u7968| 40\\r\\n9| \u7ea2\u5229\u673a\u4f1a\u6307\u6570(CSPSADRP) | \u6807\u666e\u516c\u53f8\u56f4\u7ed5A\u80a1\u5f00\u53d1\u7684\u7ea2\u5229\u6307\u6570\uff0c\u6311\u9009\u66f4\u4e25\u683c | 100 \\r\\n\\r\\n\\r\\n> ### \u6307\u6570\u57fa\u91d1\u7684\u6311\u9009\\r\\n- \u89c4\u6a21\u6bd4\u8f83\u5927\uff0c\u5386\u53f2\u6bd4\u8f83\u957f\uff0c\u8ffd\u8e2a\u6548\u679c\u597d\\r\\n- \u8981\u907f\u5f00\u89c4\u6a21\u8f83\u5c0f\u7684\u6307\u6570\u57fa\u91d1\uff0c\u6709\u4e8f\u672c\u6e05\u76d8\u98ce\u9669\uff0c\u6700\u597d\u89c4\u6a21\u57281\u4ebf\u4ee5\u4e0a\\r\\n- \u5bfb\u627e\u8d39\u7528\u6700\u4f4e\uff0c\u8bef\u5dee\u6700\u5c0f\u7684\u54c1\u79cd\\r\\n- \u53e6\u4e00\u79cd\u601d\u8def\u662f\u9009\u62e9\u6709\u7279\u8272\u7684\u589e\u5f3a\u578b\u6307\u6570\u57fa\u91d1\uff0c\u590d\u5236\u6307\u6570\u7684\u57fa\u7840\u4e0a\uff0c\u5bfb\u627e\u77ed\u671f\u673a\u4f1a\uff0c\u6709\u98ce\u9669\uff0c\u53ef\u80fd\u5dee\u4e8e\u666e\u901a\u7684\u6307\u6570\u57fa\u91d1\\r\\n\\r\\n\\r\\n> ### A\u80a1\u4e0a\u4ea4\u6240\u5927\u76d8\u80a1\u5386\u53f2\u8d70\u52bf\u7279\u70b9\\r\\n- \u603b\u4f53\u8d70\u52bf\u662f\u4e0a\u6da8\u7684\\r\\n- \u4ece03\u5e74\u5e95\u4ee5\u6765\uff0c\u53ea\u670907\uff0c09\uff0c15\u4e09\u4e2a\u660e\u663e\u725b\u5e02\uff0c\u5176\u4f59\u8d70\u5e73\u6216\u9634\u8dcc\\r\\n- A\u80a1\u7ecf\u5e38\u66b4\u6da8\u6216\u66b4\u8dcc\uff0c\u6307\u6570\u57fa\u91d1\u4e5f\u5e26\u6709\u8fd9\u4e2a\u7279\u5f81\uff0c\u9700\u8981\u6ce8\u610f\\r\\n\\r\\n\\r\\n> ### \u4e0a\u8bc150\u6307\u6570\u7279\u70b9\\r\\n- \u5927\u76d8\u80a1\u4e3a\u4e3b\uff0c\u89c4\u6a21\u6700\u5c0f\u4e5f\u6709350\u591a\u4ebf\uff0c\u90fd\u662f\u5173\u7cfb\u56fd\u8ba1\u6c11\u751f\u7684\u5927\u516c\u53f8\uff0c\u8fd9\u4e9b\u5927\u516c\u53f8\u80a1\u7968\u4e5f\u53eb**\u84dd\u7b79\u80a1**\uff0c\u4e0a\u8bc150\u5e76\u4e0d\u662f\u6295\u8d44\u5e02\u573a\u7684\u6574\u4f53\u6307\u6570\uff0c\u66f4\u591a\u7684\u662f**\u6295\u8d44\u5927\u76d8\u80a1**\\r\\n- \u53ea\u6709\u4e0a\u4ea4\u6240\u80a1\u7968\uff0c\u6ca1\u6709\u6df1\u4ea4\u6240\u80a1\u7968\uff0c\u6ca1\u6cd5\u53cd\u5e94\u56fd\u5185\u80a1\u7968\u7684\u6574\u4f53\u8d70\u52bf\\r\\n\\r\\n\\r\\n> ### \u6caa\u6df1300\u6307\u6570\u7279\u70b9\\r\\n- \u5360\u56fd\u5185\u80a1\u5e02\u5168\u90e8\u89c4\u6a21\u768460%\u4ee5\u4e0a\\r\\n- \u4ee5\u5927\u76d8\u80a1\u4e3a\u4e3b\uff0c\u517c\u987e\u4e0a\u6d77\u548c\u6df1\u5733\u4e0a\u5e02\u516c\u53f8\\r\\n- \u4e0a\u8bc150\u5305\u542b\u5728\u6caa\u6df1300\u4e2d\uff0c\u6240\u4ee5\u4e24\u4e2a\u6307\u6570\u5f88\u591a\u65f6\u5019\u8868\u73b0\u4e5f\u6bd4\u8f83\u91cd\u5408\\r\\n\\r\\n\\r\\n> ### \u4e2d\u8bc1500\u6307\u6570\u7279\u70b9\\r\\n- \u4ee5\u4e2d\u578b\u4e0a\u5e02\u516c\u53f8\u4e3a\u4e3b\uff0c\u517c\u987e\u4e0a\u6d77\u548c\u6df1\u5733\u4e0a\u5e02\u516c\u53f8\\r\\n- \u4e0e\u6caa\u6df1300\u65e0\u91cd\u5408\\r\\n\\r\\n\\r\\n> ### \u521b\u4e1a\u677f\u6307\u6570\u7279\u70b9\\r\\n- \u521b\u4e1a\u677f\u76f8\u5173\u7684\u6307\u6570\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662f\u521b\u4e1a\u677f\u7efc\u6307\uff08\u8861\u91cf\u521b\u4e1a\u677f\u6240\u6709\u4e0a\u5e02\u516c\u53f8\u80a1\u4ef7\u5e73\u5747\u8868\u73b0\uff09\uff0c\u4e00\u4e2a\u662f\u521b\u4e1a\u677f\u6307\u6570\uff08\u6700\u4e3b\u8981\u7684100\u5bb6\u521b\u4e1a\u677f\u4e0a\u5e02\u516c\u53f8\uff09\\r\\n- \u521b\u4e1a\u677f50\u6307\u6570\uff0c\u76f8\u5f53\u4e8e\u521b\u4e1a\u677f\u7684\u2018\u4e0a\u8bc150\u2019\\r\\n- \u516c\u53f8\u89c4\u6a21\u5c0f\uff0c\u4ee5\u5c0f\u4e2d\u516c\u53f8\u4e3a\u4e3b\uff0c\u66f4\u5bb9\u6613\u66b4\u6da8\u66b4\u8dcc\\r\\n\\r\\n\\r\\n> ### \u7ea2\u5229\u6307\u6570\u7279\u70b9\\r\\n- \u524d\u9762\u4ecb\u7ecd\u7684\u90fd\u662f\u6309\u7167\u5e02\u503c\u6765\u52a0\u6743\u7684\uff0c\u5373\u80a1\u7968\u89c4\u6a21\u8d8a\u5927\uff0c\u6743\u91cd\u8d8a\u9ad8\\r\\n- \u7ea2\u5229\u6307\u6570\u662f\u6309\u7167\u80a1\u606f\u7387\u6765\u52a0\u6743\u7684\\r\\n- \u9ad8\u80a1\u606f\u7387\uff0c\u5728\u718a\u5e02\u66f4\u6709\u4f18\u52bf\uff0c\u718a\u5e02\u5206\u5230\u7684100\u4e07\u80fd\u4e70\u5230\u66f4\u591a\u725b\u5e02\u5206\u5230100\u4e07\u7684\u80a1\u7968\u4efd\u989d\\r\\n- \u80fd\u957f\u671f\u53d1\u653e\u73b0\u91d1\u80a1\u606f\u7684\u516c\u53f8\uff0c\u76c8\u5229\u80fd\u529b\u8d22\u52a1\u72b6\u51b5\u66f4\u597d"},{"id":"storybook-usage2","metadata":{"permalink":"/metaTrip/build/blog/storybook-usage2","source":"@site/blog/2022-01-09-storybook2.mdx","title":"How to use Storybook 2","description":"- \u8fd9\u7bc7blog\u662fstorybook\u7684\u5165\u95e8\u6559\u7a0b\u5e76\u4e14\u5305\u542b\u4e86\u6211\u4f7f\u7528storybook 3\u5e74\u591a\u7684\u4e00\u4e9b\u4f53\u9a8c","date":"2022-01-09T00:00:00.000Z","formattedDate":"January 9, 2022","tags":[{"label":"storybook","permalink":"/metaTrip/build/blog/tags/storybook"},{"label":"react","permalink":"/metaTrip/build/blog/tags/react"}],"readingTime":5.895,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"\u5e38\u89c1\u5bbd\u57fa\u6307\u6570\u57fa\u91d1(\u4e00)","permalink":"/metaTrip/build/blog/funding-basic2"},"nextItem":{"title":"\u8d44\u4ea7\u4e0e\u6307\u6570","permalink":"/metaTrip/build/blog/funding-basic1"}},"content":"import react from \'react\';\\r\\n\\r\\n:::tip\\r\\n- \u8fd9\u7bc7blog\u662fstorybook\u7684\u5165\u95e8\u6559\u7a0b\u5e76\u4e14\u5305\u542b\u4e86\u6211\u4f7f\u7528storybook 3\u5e74\u591a\u7684\u4e00\u4e9b\u4f53\u9a8c \\r\\n- \u53ea\u9488\u5bf9React\u9879\u76ee\\r\\n- \u8fdb\u4e00\u6b65\u5b66\u4e60\uff0c\u8bf7\u8bbf\u95ee[Storybook\u5b98\u7f51](https://storybook.js.org/)\\r\\n:::\\r\\n\\r\\n[Storybook](https://storybook.js.org/) is an open source tool for building UI components and pages in isolation. It streamlines UI development, testing, and documentation.\\r\\n\\r\\n\u4eceStorybook\u7684\u5b98\u65b9\u63cf\u8ff0\u6765\u770b\uff0c\u4ed6\u662f\u7528\u4e8e\u5feb\u901f\u6784\u5efaUI demo\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5e2e\u7528\u6237\u5feb\u901f\u6784\u5efa\u9875\u9762\uff1b\u5e76\u4e14\u6709\u5f88\u597d\u7684\u8bed\u6cd5\u529f\u80fd\uff0c\u8f7b\u677e\u4e66\u5199demo\uff1b\u8fd8\u6709\u5f88\u597d\u7684\u8f85\u52a9\u63d2\u4ef6\uff0c\\r\\n\u6bd4\u5982demo\u7684\u6587\u6863\u8f85\u52a9\uff0c\u53c2\u6570\u8f85\u52a9\uff0c\u8fd8\u6709accessibility\u8f85\u52a9\u6d4b\u8bd5\u7b49\u7b49\u3002\u8fd9\u4e00\u5207\u51e0\u4e4e\u4fc3\u4f7f\u5b83\u6210\u4e3a\u4e86\u9879\u76eedemo\u7684\u6700\u597d\u9009\u62e9\u3002\u56e0\u4e3a\u6211\u7684\u9879\u76ee\u6d89\u53ca\u5230\u7ec4\u4ef6\u5e93\u7684\u5f00\u53d1\uff0c\\r\\n\u6240\u4ee5storybook\u5c31\u66f4\u663e\u5f97\u5408\u9002\u548c\u91cd\u8981\u3002\\r\\n\\r\\n:::note\\r\\n- version: v6.4.9(Currently) and [Latest](https://github.com/storybookjs/storybook/releases)\\r\\n:::\\r\\n\\r\\nStorybook \u4ee3\u7801\u5e93\u66f4\u65b0\u5f88\u6d3b\u8dc3\uff0c\u51e0\u4e4e\u4e00\u5e74\u4e00\u6b21major\u7248\u672c\u7684\u66f4\u65b0\uff0c\u603b\u4f1a\u5e26\u6765\u4e9b\u65b0\u7684\u529f\u80fd\uff0c\u8fd9\u7bc7blog\u6211\u4eec\u90a3\u76ee\u524d\u6700\u65b0\u7248\u672cv6.4.9 \u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## 4. Configure\\r\\n\\r\\nStorybook is configured via a folder called .storybook, which contains various configuration files.\\r\\n\\r\\nStorybook\u914d\u7f6e\u6587\u4ef6\u4e00\u822c\u662f\u653e\u5728.storybook\u7684\u6587\u4ef6\u5939\u4e0b\u9762\uff0c\u901a\u8fc7-c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u8def\u5f84\u914d\u7f6e\u3002\u4e3b\u8981\u5305\u542b\u5982\u4e0b\u4e09\u4e2a\u6587\u4ef6\uff1amain.js preview.js and manager.js\\r\\n[Detials](https://storybook.js.org/docs/react/configure/overview)\\r\\n\\r\\n### 4-1. main.js\\r\\n\\r\\nThe main configuration file is main.js.\\r\\n\\r\\n:::note\\r\\n- This file controls the Storybook server\'s behavior, so you must restart Storybook\u2019s process when you change it.\\r\\n:::\\r\\n\\r\\nThe main.js configuration file is a preset and, as such, has a powerful interface, but the key fields within it are:\\r\\n\\r\\n- stories: \u4e3b\u8981\u662f\u914d\u7f6estorie cases\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u662f\u6587\u4ef6\u540d\u4e2d\u5e26\u6709 stories \u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u8def\u5f84\uff0c\u6587\u4ef6\u540d\u89c4\u5219\uff0c\u6587\u4ef6\u540e\u7f00\u90fd\u662f\u53ef\u914d\u7f6e\u7684\u3002\\r\\n- addons - \u914d\u7f6e\u4e00\u4e0b\u9875\u9762\u4e2d\u9700\u8981\u7528\u5230\u7684addons.\\r\\n- webpackFinal - \u81ea\u5b9a\u4e49\u7684 webpack configuration.\\r\\n- babel - \u81ea\u5b9a\u4e49\u7684 babel configuration.\\r\\n\\r\\n```jsx\\r\\n// .storybook/main.js\\r\\n\\r\\nmodule.exports = {\\r\\n  stories: [\'../packages/MyStories\'],\\r\\n  addons: [\'@storybook/addon-essentials\'],\\r\\n  webpackFinal: async (config, { configType }) => {\\r\\n    config.module.rules.push({\\r\\n      test: /\\\\.scss$/,\\r\\n      use: [\'style-loader\', \'css-loader\', \'sass-loader\'],\\r\\n      include: path.resolve(__dirname, \'../\'),\\r\\n    });\\r\\n\\r\\n    return config;\\r\\n  },\\r\\n    babel: async (options) => ({\\r\\n    ...options,\\r\\n    // any extra options you want to set\\r\\n  })\\r\\n};\\r\\n\\r\\n```\\r\\n\\r\\n#### On-demand story loading\uff1a\\r\\n\\r\\n\u6309\u9700\u52a0\u8f7dstories\uff0c\u8fdb\u884c\u6027\u80fd\u63d0\u5347\uff0c**Starting with Storybook 6.4**, you can optimize your story loading by enabling the storyStoreV7 feature flag in your configuration as follows:\\r\\n\\r\\n```jsx\\r\\n// .storybook/main.js\\r\\n\\r\\nmodule.exports = {\\r\\n  stories: [],\\r\\n  addons: [\'@storybook/addon-essentials\'],\\r\\n  features: {\\r\\n    storyStoreV7: true,\\r\\n  },\\r\\n};\\r\\n\\r\\n```\\r\\n\\r\\n### 4-2. preview.js\\r\\n\\r\\nTo control the way stories are rendered and add global decorators and parameters\\r\\n\\r\\n- This is loaded in the Canvas tab\\r\\n- Use preview.js for global code that applies to all stories.\\r\\n\\r\\nThe preview.js file can be an ES module and export the following keys:\\r\\n\\r\\n- decorators\uff1a\u5305\u542b\u9875\u9762\u7ed3\u6784\u548c\u5168\u5c40\u6837\u5f0f\uff0c\u90fd\u53ef\u4ee5\u5728decorators\u4e2d\u5b9a\u4e49\\r\\n- parameters\uff1a\u4e00\u822c\u53ef\u4ee5\u914d\u7f6e\u5168\u5c40\u7684docs\u548caction\uff0cbackground\\r\\n- globalTypes: \\r\\n\\r\\n```jsx\\r\\n// .storybook/preview.js\\r\\n\\r\\n// createGlobalStyle from styled-component\\r\\nimport GlobalStyles from \'./GlobalStyles\';\\r\\n\\r\\nexport const decorators = [\\r\\n  (Story) => (\\r\\n    <GlobalStyles />\\r\\n    <div style={{ margin: \'3em\' }}>\\r\\n      <Story />\\r\\n    </div>\\r\\n  ),\\r\\n];\\r\\n\\r\\nexport const parameters = {\\r\\n  backgrounds: {\\r\\n    values: [\\r\\n      { name: \'red\', value: \'#f00\' },\\r\\n      { name: \'green\', value: \'#0f0\' },\\r\\n    ],\\r\\n  },\\r\\n};\\r\\n\\r\\nexport const globalTypes = {\\r\\n  theme: {\\r\\n    name: \'Theme\',\\r\\n    description: \'Global theme for components\',\\r\\n    defaultValue: \'light\',\\r\\n    toolbar: {\\r\\n      icon: \'circlehollow\',\\r\\n      // Array of plain string values or MenuItem shape (see below)\\r\\n      items: [\'light\', \'dark\'],\\r\\n      // Property that specifies if the name of the item will be displayed\\r\\n      showName: true,\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\n```\\r\\n\\r\\n### 4-3. manager.js\\r\\n\\r\\nTo control the layout of Storybook\u2019s UI you can use addons.setConfig in your .storybook/manager.js:\\r\\n\\r\\n```jsx\\r\\n// .storybook/manager.js\\r\\n\\r\\nimport { addons } from \'@storybook/addons\';\\r\\n\\r\\naddons.setConfig({\\r\\n  isFullscreen: false,\\r\\n  showNav: true,\\r\\n  showPanel: true,\\r\\n  panelPosition: \'bottom\',\\r\\n  enableShortcuts: true,\\r\\n  isToolshown: true,\\r\\n  theme: undefined,\\r\\n  selectedPanel: undefined,\\r\\n  initialActive: \'sidebar\',\\r\\n  sidebar: {\\r\\n    showRoots: false,\\r\\n    collapsedRoots: [\'other\'],\\r\\n  },\\r\\n  toolbar: {\\r\\n    title: { hidden: false, },\\r\\n    zoom: { hidden: false, },\\r\\n    eject: { hidden: false, },\\r\\n    copy: { hidden: false, },\\r\\n    fullscreen: { hidden: false, },\\r\\n  },\\r\\n});\\r\\n\\r\\n```\\r\\n\\r\\n## 5. Essential addons and Addons\\r\\n\\r\\nStorybook\u5728\u53d1\u5c55\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5438\u6536\u4e00\u4e9b\u5e38\u7528\u7684addon\uff0c\u4f5c\u4e3a\u6846\u67b6\u9884\u5236\u7684addon\uff0c\u8fd9\u4e2a\u5c31\u662fEssential addons and Addons\u7684\u533a\u522b\u3002 \\r\\n\u4f4e\u7248\u672c\u7684control \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a@storybook/addon-knobs\uff0c\u5728V6\u7248\u672c\u53ef\u4ee5\u5185\u7f6e\u751f\u6210\u4e86\u3002\u4f46\u662f\u8fd9\u4e2a\u63d2\u4ef6\u672c\u8eab\u76ee\u524d\u662f\u5411\u4e0b\u517c\u5bb9\u7684\\r\\n\\r\\n### 5-1. Essential addons\\r\\n\\r\\nIf you\'re upgrading from a previous Storybook version, you\'ll need to run the following command in your terminal:\\r\\n\\r\\n```jsx\\r\\n#With npm\\r\\nnpm install -D @storybook/addon-essentials\\r\\n\\r\\n#With yarn\\r\\nyarn add -D @storybook/addon-essentials\\r\\n\\r\\n// .storybook/main.js\\r\\n\\r\\nmodule.exports = {\\r\\n  addons: [\'@storybook/addon-essentials\'],\\r\\n};\\r\\n\\r\\n```\\r\\n\\r\\nThere are many third-party addons as well as \u201cofficial\u201d addons developed by the Storybook core team.\u3001\\r\\n[Detials](https://storybook.js.org/docs/react/essentials/introduction)\\r\\n\\r\\n- Docs\\r\\n- Controls\\r\\n- Actions\\r\\n- Viewport\\r\\n- Backgrounds\\r\\n- Toolbars & globals\\r\\n- Measure\\r\\n- Outline\\r\\n\\r\\n\\r\\n### 5-2. Install 3rd party addons\\r\\n\\r\\nStorybook has [hundreds of reusable addons](https://storybook.js.org/addons) that are packaged as NPM modules.\\r\\n\\r\\n#### Using addons\\r\\n[Detials](https://storybook.js.org/docs/react/addons/install-addons#using-addons)\\r\\n\\r\\n```jsx\\r\\n\\r\\nyarn add -D @storybook/addon-a11y\\r\\n\\r\\n// .storybook/main.js\\r\\n\\r\\nmodule.exports = {\\r\\n  stories: [],\\r\\n  addons: [\\r\\n    // Other Storybook addons\\r\\n    \'@storybook/addon-a11y\', //\ud83d\udc48 The addon registered here\\r\\n  ],\\r\\n};\\r\\n\\r\\n```\\r\\n\\r\\n<img src=\\"https://storybook.js.org/5c457fbc275d0c3e2a37aae388a6019f/storybook-addon-installed-registered.png\\" alt=\\"Storybook addon\\" style={{width: \'100%\'}}/>\\r\\n\\r\\n\\r\\n### 5-3. \u81ea\u5b9a\u4e49addons\\r\\n\\r\\nNow let\u2019s add a panel to Storybook. Inside the src directory, create a new file called register.js and add the following:\\r\\n[Detials](https://storybook.js.org/docs/react/addons/writing-addons#add-a-panel)\\r\\n\\r\\n```jsx\\r\\n// /my-addon/src/register.js\\r\\n\\r\\nimport React from \'react\';\\r\\n\\r\\nimport { addons, types } from \'@storybook/addons\';\\r\\n\\r\\nimport { AddonPanel } from \'@storybook/components\';\\r\\n\\r\\nconst ADDON_ID = \'myaddon\';\\r\\nconst PANEL_ID = `${ADDON_ID}/panel`;\\r\\n\\r\\n// give a unique name for the panel\\r\\nconst MyPanel = () => <div>MyAddon</div>;\\r\\n\\r\\naddons.register(ADDON_ID, (api) => {\\r\\n  addons.add(PANEL_ID, {\\r\\n    type: types.PANEL,\\r\\n    title: \'My Addon\',\\r\\n    render: ({ active, key }) => (\\r\\n      <AddonPanel active={active} key={key}>\\r\\n        <MyPanel />\\r\\n      </AddonPanel>\\r\\n    ),\\r\\n  });\\r\\n});\\r\\n```\\r\\n\\r\\n:::note\\r\\n- register \u9700\u8981\u5728main.js\u8fdb\u884c\u6ce8\u518c\uff08When you register a Storybook addon, it will look for either register.js or preset.js as the entry points.\uff09\\r\\n:::\\r\\n\\r\\n<img src=\\"https://storybook.js.org/8a84ad965e96ef91ab0feb62f03b48b9/addon-initial-state.png\\" alt=\\"Storybook addon\\" style={{width: \'100%\'}}/>\\r\\n\\r\\n\\r\\n## 6. CLI options\\r\\n\\r\\nStorybook comes with two CLI utilities: start-storybook and build-storybook.\\r\\n[Detials](https://storybook.js.org/docs/react/api/cli-options)"},{"id":"funding-basic1","metadata":{"permalink":"/metaTrip/build/blog/funding-basic1","source":"@site/blog/2022-01-06-f1.mdx","title":"\u8d44\u4ea7\u4e0e\u6307\u6570","description":"- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82821\uff0c2","date":"2022-01-06T00:00:00.000Z","formattedDate":"January 6, 2022","tags":[{"label":"funding","permalink":"/metaTrip/build/blog/tags/funding"}],"readingTime":2.73,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"How to use Storybook 2","permalink":"/metaTrip/build/blog/storybook-usage2"},"nextItem":{"title":"How to use Storybook 1","permalink":"/metaTrip/build/blog/storybook-usage1"}},"content":":::tip\\r\\n- From \u300a\u6307\u6570\u57fa\u91d1\u6295\u8d44\u6307\u5357\u300b\u7ae0\u82821\uff0c2\\r\\n- \u5c0f\u767d\u5b66\u4e60\uff0c\u5207\u52ff\u76f2\u76ee\u8ddf\u4ece\\r\\n:::\\r\\n\\r\\n## \u8d44\u4ea7\\r\\n\\r\\n- \u80fd\u591f\u4e3a\u6211\u4eec\u201d\u751f\u94b1\u201c\u7684\u5c31\u662f\u8d44\u4ea7\uff0c**\u73b0\u91d1**\u4e0d\u662f\u8d44\u4ea7\\r\\n- \u8d44\u4ea7\u5206\u4e3a\u80fd\u591f\u4ea7\u751f\u73b0\u91d1\u6d41\u7684\u8d44\u4ea7\u548c\u4e0d\u80fd\u4ea7\u751f\u73b0\u91d1\u6d41\u7684\u8d44\u4ea7\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n> \u6bd4\u5982\u94f6\u884c\u7406\u8d22\u4e00\u4e2a5%\uff0c\u4e00\u4e2a3%\uff0c\u53e6\u4e00\u4e2a\u662f\u519c\u6751\u5408\u4f5c\u793e\u76845%\uff0c \u8fd9\u4e9b\u90fd\u662f\u53ef\u4ee5\u4ea7\u751f\u73b0\u91d1\u6d41\u7684\u8d44\u4ea7\uff0c\u4ed6\u7684\u4ef7\u683c\u53d6\u51b3\u4e8e\u73b0\u91d1\u6d41\u7684\u5927\u5c0f\u548c\u7a33\u5b9a\u6027\u3002\\r\\n\u94f6\u884c\u7684\u7a33\u5b9a\u6027\u9ad8\u4e8e\u519c\u6751\u5408\u4f5c\u793e\uff0c5%\u9ad8\u4e8e3%\uff0c\u4f60\u5c31\u5f88\u5bb9\u6613\u77e5\u9053\u54ea\u4e2a\u8d44\u4ea7\u66f4\u4f18\u8d28\\r\\n\\r\\n> \u4e0d\u80fd\u4ea7\u751f\u73b0\u91d1\u6d41\u7684\u8d44\u4ea7\uff0c\u4ed6\u7684\u4ef7\u683c\u4e3b\u8981\u53d6\u51b3\u4e8e\u4f9b\u6c42\u5173\u7cfb\uff0c\u6bd4\u5982\u4e71\u4e16\u9ec4\u91d1\uff0c\u7279\u6b8a\u65f6\u671f\u4e0b\u4f9b\u9700\u5173\u7cfb\u53d1\u751f\u6539\u53d8\uff0c\u624d\u4f1a\u66f4\u503c\u94b1\u3002\\r\\n\\r\\n> \u80fd\u4ea7\u751f\u73b0\u91d1\u6d41\u7684\u8d44\u4ea7\u901a\u5e38\u6bd4\u4e0d\u80fd\u4ea7\u751f\u73b0\u91d1\u6d41\u7684\u8d44\u4ea7\uff0c**\u957f\u671f\u6536\u76ca\u7387\u66f4\u9ad8**\u3002\u9ec4\u91d1\u7684\u957f\u671f\u6536\u76ca\u7387\u751a\u81f3\u4f4e\u4e8e\u56fd\u503a\u3002\\r\\n\\r\\n\\r\\n## \u6307\u6570\\r\\n\\r\\n- \u6307\u6570\u662f\u4e00\u4e2a\u9009\u80a1\u89c4\u5219\uff0c\u4ed6\u7684\u76ee\u7684\u662f\u6309\u7167\u67d0\u4e2a\u89c4\u5219\u6311\u9009\u51fa\u4e00\u7bee\u5b50\u80a1\u7968\uff0c\u5e76\u53cd\u5e94\u8fd9\u4e00\u7bee\u5b50\u80a1\u7968\u7684**\u5e73\u5747\u4ef7\u683c\u8d70\u52bf**\u3002\\r\\n\\r\\n> \u4f8b\u5982\u6caa\u6df1300\u6307\u6570\uff0c\u662f\u7531\u4e0a\u6d77\u548c\u6df1\u5733\u8bc1\u5238\u5e02\u573a\u4e2d\u9009\u53d6300\u53eaA\u80a1\u4f5c\u4e3a\u6837\u672c\u7f16\u5236\u800c\u6210\u7684\u6210\u5206\u80a1\u6307\u6570\uff0c\u6211\u4eec\u53ea\u9700\u8981\u770b\u4e0b\u6caa\u6df1300\u6307\u6570\uff0c\\r\\n\u5c31\u53ef\u4ee5\u77e5\u9053\u56fd\u5185\u6700\u5927\u7684300\u53ea\u80a1\u7968\uff0c\u4eca\u5929\u662f\u6574\u4f53\u6da8\u4e86\u8fd8\u662f\u8dcc\u4e86\u3002\\r\\n\\r\\n- \u6307\u6570\u70b9\u6570\uff0c\u662f\u6307\u6570\u80cc\u540e\u516c\u53f8\u7684\u5e73\u5747\u80a1\u4ef7\uff0c\u8fd9\u4e2a\u70b9\u6570\u4e0b\u8dcc\u6216\u4e0a\u6da8\uff0c\u4ee3\u8868\u6307\u6570\u80cc\u540e\u516c\u53f8\u80a1\u4ef7\u7684\u4e0b\u8dcc\u6216\u4e0a\u6da8\uff0c\u957f\u671f\u6765\u770b\uff0c\u6307\u6570\u70b9\u6570\u662f**\u4e0d\u65ad\u4e0a\u6da8\u7684**\\r\\n\\r\\n- \u6307\u6570\u57fa\u91d1\u5c31\u662f\u57fa\u91d1\u516c\u53f8\u5f00\u53d1\u4e00\u4e2a\u57fa\u91d1\u4ea7\u54c1\u3002\u4e5f\u662f\u5b8c\u5168\u6309\u7167\u6307\u6570\u7684\u89c4\u5219\u53bb\u9009\u80a1\uff0c\u56e0\u4e3a\u6307\u6570\u57fa\u91d1\u6301\u6709\u7684\u80a1\u7968\u79cd\u7c7b\uff0c\u6570\u91cf\uff0c\u6bd4\u4f8b\u90fd\u548c\u6307\u6570\u975e\u5e38\u63a5\u8fd1\uff0c\\r\\n\u6240\u4ee5\u6307\u6570\u57fa\u91d1\u7684\u8868\u73b0\u4e5f\u548c\u6307\u6570\u4e5f\u975e\u5e38\u63a5\u8fd1\uff0c\u4e5f\u5c31\u662f\u8bf4\u6307\u6570\u57fa\u91d1\u628a\u6307\u6570\u7684\u62bd\u8c61\u6982\u5ff5\u53d8\u6210\u4e86\u5b9e\u9645\u7684\u4ea7\u54c1\u3002\\r\\n\\r\\n> \u6307\u6570\u57fa\u91d1\u7684\u4e09\u4e2a\u7279\u70b9\uff1a\u957f\u751f\u4e0d\u8001\uff0c\u4ea7\u671f\u4e0a\u6da8\uff0c\u6210\u672c\u4f4e\u3002"},{"id":"storybook-usage1","metadata":{"permalink":"/metaTrip/build/blog/storybook-usage1","source":"@site/blog/2022-01-01-storybook1.mdx","title":"How to use Storybook 1","description":"- \u8fd9\u7bc7blog\u662fstorybook\u7684\u5165\u95e8\u6559\u7a0b\u5e76\u4e14\u5305\u542b\u4e86\u6211\u4f7f\u7528storybook 3\u5e74\u591a\u7684\u4e00\u4e9b\u4f53\u9a8c","date":"2022-01-01T00:00:00.000Z","formattedDate":"January 1, 2022","tags":[{"label":"storybook","permalink":"/metaTrip/build/blog/tags/storybook"},{"label":"react","permalink":"/metaTrip/build/blog/tags/react"}],"readingTime":9.315,"truncated":true,"authors":[{"name":"Sheldon Y Sun","title":"Jser @ Open Source Community","url":"https://github.com/777sunny777","imageURL":"https://github.com/777sunny777.png","key":"sheldon"}],"prevItem":{"title":"\u8d44\u4ea7\u4e0e\u6307\u6570","permalink":"/metaTrip/build/blog/funding-basic1"}},"content":"import react from \'react\';\\r\\n\\r\\n:::tip\\r\\n- \u8fd9\u7bc7blog\u662fstorybook\u7684\u5165\u95e8\u6559\u7a0b\u5e76\u4e14\u5305\u542b\u4e86\u6211\u4f7f\u7528storybook 3\u5e74\u591a\u7684\u4e00\u4e9b\u4f53\u9a8c \\r\\n- \u53ea\u9488\u5bf9React\u9879\u76ee\\r\\n- \u8fdb\u4e00\u6b65\u5b66\u4e60\uff0c\u8bf7\u8bbf\u95ee[Storybook\u5b98\u7f51](https://storybook.js.org/)\\r\\n:::\\r\\n\\r\\n[Storybook](https://storybook.js.org/) is an open source tool for building UI components and pages in isolation. It streamlines UI development, testing, and documentation.\\r\\n\\r\\n\u4eceStorybook\u7684\u5b98\u65b9\u63cf\u8ff0\u6765\u770b\uff0c\u4ed6\u662f\u7528\u4e8e\u5feb\u901f\u6784\u5efaUI demo\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5e2e\u7528\u6237\u5feb\u901f\u6784\u5efa\u9875\u9762\uff1b\u5e76\u4e14\u6709\u5f88\u597d\u7684\u8bed\u6cd5\u529f\u80fd\uff0c\u8f7b\u677e\u4e66\u5199demo\uff1b\u8fd8\u6709\u5f88\u597d\u7684\u8f85\u52a9\u63d2\u4ef6\uff0c\\r\\n\u6bd4\u5982demo\u7684\u6587\u6863\u8f85\u52a9\uff0c\u53c2\u6570\u8f85\u52a9\uff0c\u8fd8\u6709accessibility\u8f85\u52a9\u6d4b\u8bd5\u7b49\u7b49\u3002\u8fd9\u4e00\u5207\u51e0\u4e4e\u4fc3\u4f7f\u5b83\u6210\u4e3a\u4e86\u9879\u76eedemo\u7684\u6700\u597d\u9009\u62e9\u3002\u56e0\u4e3a\u6211\u7684\u9879\u76ee\u6d89\u53ca\u5230\u7ec4\u4ef6\u5e93\u7684\u5f00\u53d1\uff0c\\r\\n\u6240\u4ee5storybook\u5c31\u66f4\u663e\u5f97\u5408\u9002\u548c\u91cd\u8981\u3002\\r\\n\\r\\n:::note\\r\\n- version: v6.4.9(Currently) and [Latest](https://github.com/storybookjs/storybook/releases)\\r\\n:::\\r\\n\\r\\nStorybook \u4ee3\u7801\u5e93\u66f4\u65b0\u5f88\u6d3b\u8dc3\uff0c\u51e0\u4e4e\u4e00\u5e74\u4e00\u6b21major\u7248\u672c\u7684\u66f4\u65b0\uff0c\u603b\u4f1a\u5e26\u6765\u4e9b\u65b0\u7684\u529f\u80fd\uff0c\u8fd9\u7bc7blog\u6211\u4eec\u90a3\u76ee\u524d\u6700\u65b0\u7248\u672cv6.4.9 \u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## 0. Storybook\u9875\u9762\u5e03\u5c40\\r\\n\\r\\n### Sidebar and Canvas\\r\\n\\r\\n<video controls=\\"controls\\" autoPlay=\\"autoplay\\" loop=\\"loop\\" style={{width: \'100%\'}}>\\r\\n    <source src=\\"https://storybook.js.org/f818682edbbcdf2c04093f633aa36761/example-browse-all-stories-optimized.mp4\\" type=\\"video/mp4\\"/>\\r\\n</video>\\r\\n\\r\\n### Shortcuts\\r\\n\\r\\n<video controls=\\"controls\\" autoPlay=\\"autoplay\\" loop=\\"loop\\" style={{width: \'100%\'}}>\\r\\n    <source src=\\"https://storybook.js.org/b398f68ed8889feed0a52f077510efcf/storybook-keyboard-shortcuts-optimized.mp4\\" type=\\"video/mp4\\"/>\\r\\n</video>\\r\\n\\r\\n### Toolbar\\r\\n\\r\\n<video controls=\\"controls\\" autoPlay=\\"autoplay\\" loop=\\"loop\\" style={{width: \'100%\'}}>\\r\\n    <source src=\\"https://storybook.js.org/8b083907d74e7f2b9a298e5f324cc751/toolbar-walkthrough-optimized.mp4\\" type=\\"video/mp4\\"/>\\r\\n</video>\\r\\n\\r\\n### Docs\\r\\n\\r\\n<video controls=\\"controls\\" autoPlay=\\"autoplay\\" loop=\\"loop\\" style={{width: \'100%\'}}>\\r\\n    <source src=\\"https://storybook.js.org/07234fedf00ba418879c443de0764c1c/toolbar-docs-tab-optimized.mp4\\" type=\\"video/mp4\\"/>\\r\\n</video>\\r\\n\\r\\n### Addons\\r\\n\\r\\n<video controls=\\"controls\\" autoPlay=\\"autoplay\\" loop=\\"loop\\" style={{width: \'100%\'}}>\\r\\n    <source src=\\"https://storybook.js.org/946b2f4bdb006e8475d21202d68b9eec/addons-walkthrough-optimized.mp4\\" type=\\"video/mp4\\"/>\\r\\n</video>\\r\\n\\r\\n\\r\\n## 1. \u5b89\u88c5\\r\\n\\r\\nStorybook \u7684[\u5b89\u88c5](https://storybook.js.org/docs/react/get-started/install)\u5f88\u667a\u80fd\uff0cnpx sb init \u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u5b89\u88c5\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\u5b89\u88c5\u4e4b\u524d\u4f60\u5fc5\u987b\u5df2\u7ecf\u6709\u9879\u76ee\u6846\u67b6\u7684\u4f9d\u8d56\u3002\\r\\n\\r\\n:::note\\r\\n- Storybook will look into your project\'s dependencies during its install process and provide you with the best configuration available.\\r\\n- Storybook\u53ea\u662f\u9700\u8981\u9879\u76ee\u6846\u67b6\u4f9d\u8d56\uff0c\u6bd4\u5982react\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6807\u8bc6\uff0c\u4f60\u4e0d\u9700\u8981\u5199\u4efb\u4f55\u6846\u67b6\u4ee3\u7801\u5728\u9879\u76ee\u4e2d\\r\\n:::\\r\\n\\r\\n\\r\\n## 2. Write stories\\r\\n\\r\\nStory\u5c31\u662f\u4e00\u4e2ademo case\uff0cstories file\u5c31\u662f\u5b58\u653e\u4e00\u7c7bdemo cases\u7684\u96c6\u5408\uff0c\u8fd9\u4e9bcases\u6839\u636etitle\u5206\u6210\u4e0d\u540c\u7684\u7c7b\u578b\\r\\n\\r\\n```jsx\\r\\n// \u8fd9\u4e2a\u4e00\u4e2a\u5c55\u793abutton\u7684stories file\\r\\n// Button.stories.js|jsx\\r\\n\\r\\nimport React from \'react\';\\r\\n\\r\\nimport { Button } from \'./Button\';\\r\\n\\r\\nexport default {\\r\\n  \\r\\n  // title\u662f\u8fd9\u4e2a\u96c6\u5408\u7684\u540d\u79f0\uff0c\u540c\u65f6\u4e5f\u7528\u4e8estorybook \u5bfc\u822a\u680f\u7684\u7ed3\u6784\\r\\n  // \u6bd4\u5982\u53ef\u4ee5\u6709\u5c42\u7ea7\u5173\u7cfb\uff0c\'Button/Responsive\'\\r\\n\\r\\n  title: \'Button\',\\r\\n  \\r\\n  // component \u5c5e\u6027\u53ef\u4ee5\u4e0d\u5199, \u540e\u9762\u89e3\u91ca\u6587\u6863\u7684\u65f6\u5019\u518d\u8be6\u7ec6\u8bf4\\r\\n  // Storybook uses the component key in the story file\u2019s default export to extract the component\'s description and props.\\r\\n  \\r\\n  component: Button,\\r\\n};\\r\\n\\r\\n// \u8fd9\u91cc\u901a\u8fc7export\u5bfc\u51fa\u5c31\u751f\u6210\u4e86\u4e00\u4e2ademo case page\\r\\n// \u8def\u5f84\u5c31\u662f\u5de6\u4fa7\u5bfc\u822a\u680f\u4e2d Button\u4e0b\u9762\u7684Primary\\r\\n\\r\\nexport const Primary = () => <Button primary>Button</Button>;\\r\\n\\r\\n// \u8fd9\u91cc\u53ef\u4ee5\u6539\u53d8case\u7684\u547d\u540d\uff0c\u9ed8\u8ba4\u662ffunction name\\r\\nPrimary.storyName = \'I am the primary\';\\r\\n\\r\\nexport const Secondary = () => <Button backgroundColor=\\"#ff0\\" label=\\"\ud83d\ude04\ud83d\udc4d\ud83d\ude0d\ud83d\udcaf\\" />;\\r\\nexport const Tertiary = () => <Button backgroundColor=\\"#ff0\\" label=\\"\ud83d\udcda\ud83d\udcd5\ud83d\udcc8\ud83e\udd13\\" />;\\r\\n\\r\\n```\\r\\n\\r\\n### 2-1 Using args\\r\\n\\r\\n\u4f7f\u7528args\u662f\u6700\u65b0\u7248\u672c\u4e2dstorybook \u6bd4\u8f83\u5efa\u8bae\u7684\u5199\u6cd5\uff0c\u4e3b\u8981\u7684\u4f18\u70b9\u662f\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\uff0c\u7528\u6cd5\u4e0a\u4e5f\u6bd4\u8f83\u6709\u7ae0\u53ef\u5faa\uff0c\u4fbf\u4e8e\u7ba1\u7406\u3002\\r\\n\u4e0d\u8fc7\u6839\u636e\u6211\u7684\u7ecf\u9a8c\u8fd8\u662f\u8981\u770b\u4f60\u7528storybook\u7684target\u662f\u4ec0\u4e48\uff0c\u5982\u679c\u53ea\u662ffor show UI demo\uff0c\u4f7f\u7528args \u7684\u65b9\u5f0f\u662f\u53ef\u884c\u7684\u3002\\r\\n\u4f46\u662f\u6bd4\u5982\u505a\u7ec4\u4ef6\u5e93\uff0cshow UI demo\u53ea\u662f\u4e00\u4e2a\u65b9\u9762\uff0cshow demo code for users \u4e5f\u662f\u5f88\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7storybook\u7684cases\u53ef\u4ee5\u8ba9\u7528\u6237\\r\\n\u76f4\u89c2\u7684\u660e\u767ddemo \u8981\u600e\u4e48\u5199\uff0c\u751a\u81f3\u53ea\u9700\u8981\u4ed6copy/paste\u5c31\u53ef\u4ee5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5c3d\u91cf\u5c11\u7684\u4f7f\u7528storybook\u63d0\u4f9b\u7684\u4e00\u4e9b\u63a5\u53e3\u65b9\u6cd5\uff0c\u51cf\u5c11storybook\\r\\n\u5bf9\u4f60\u7684demo case code \u7684\u5e72\u6270\u3002\\r\\n\\r\\n\u4efb\u4f55\u65f6\u5019\uff0c\u6211\u4eec\u90fd\u8981\u660e\u767d\u7528\u6237\u5173\u5fc3\u7684\u662f\u4ec0\u4e48\uff1f\u800c\u4e0d\u662f\u76f2\u76ee\u7684\u6c42\u65b0\u6c42\u53d8\u3002\\r\\n\\r\\n```jsx\\r\\nimport React from \'react\';\\r\\nimport { Button } from \'./Button\';\\r\\n\\r\\nexport default {\\r\\n  title: \'Button\',\\r\\n  component: Button,\\r\\n};\\r\\n\\r\\n//\ud83d\udc47 We create a \u201ctemplate\u201d of how args map to rendering\\r\\nconst Template = (args) => <Button {...args} />;\\r\\n\\r\\n// \ud83d\udc47 Each story then reuses that template\\r\\nexport const Primary = Template.bind({});\\r\\nPrimary.args = { background: \'#ff0\', label: \'Button\' };\\r\\n\\r\\nexport const Secondary = Template.bind({});\\r\\nSecondary.args = { ...Primary.args, label: \'\ud83d\ude04\ud83d\udc4d\ud83d\ude0d\ud83d\udcaf\' };\\r\\n\\r\\nexport const Tertiary = Template.bind({});\\r\\nTertiary.args = { ...Primary.args, label: \'\ud83d\udcda\ud83d\udcd5\ud83d\udcc8\ud83e\udd13\' };\\r\\n```\\r\\n\\r\\n### 2-2 Remix two stories\\r\\n\\r\\nStory\u662f\u53ef\u4ee5\u76f8\u4e92\u5f15\u7528\u7684\uff0c\u4e3b\u8981\u4e5f\u662f\u4e3a\u4e86\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\uff0c\u4fdd\u6301\u4e00\u81f4\u6027\u3002\\r\\n\\r\\n```jsx\\r\\nimport React from \'react\';\\r\\nimport { Button } from \'./Button\';\\r\\nimport * as TextInputStories from \'./TextInput.stories\';\\r\\n\\r\\nexport default {\\r\\n  title: \'Button\',\\r\\n  component: Button,\\r\\n};\\r\\n\\r\\nexport const TestRemix = () => <>\\r\\n  <TextInputStories.Default />\\r\\n  <Button primary>Button</Button>\\r\\n<>\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\n### 2-3 Controls\\r\\n\\r\\n\u9996\u5148Control\u662f\u5f88\u597d\u7684\u529f\u80fd\uff0c\u5bf9\u4e8eshow UI demo \u662f\u5f88\u65b9\u4fbf\u76f4\u89c2\u7684\u5c55\u793a\uff0c\u5bf9\u4e8eV6\u7248\u672c\uff0cControl \u662f\u5185\u7f6e\u63d2\u4ef6\uff0c\u53ea\u9700\u8981\u901a\u8fc7Template\u548cargs\u914d\u5408\u5c31\u53ef\u4ee5\u81ea\u52a8\u751f\u6210\\r\\n\\r\\n[\u8be6\u7ec6\u5199\u6cd5](https://storybook.js.org/docs/react/essentials/controls)\\r\\n\\r\\n\u5728\u4f4e\u7248\u672c\u4e2d(V6\u4ecd\u7136\u652f\u6301addons\u5199\u6cd5)\uff0c\u662f\u901a\u8fc7\u5b89\u88c5addon-knobs\u63d2\u4ef6\u6765\u5b9e\u73b0\u7684\u3002 \\r\\n\\r\\n<video controls=\\"controls\\" autoPlay=\\"autoplay\\" loop=\\"loop\\" style={{width: \'100%\'}}>\\r\\n    <source src=\\"https://storybook.js.org/9d2e1f29cfb010e3aae6cd76547c4bab/addon-controls-optimized.mp4\\" type=\\"video/mp4\\"/>\\r\\n</video>\\r\\n\\r\\n\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u548cusing args \u4e00\u6837\uff0c\u4f7f\u7528\u8fd8\u662f\u4e0d\u4f7f\u7528\u9700\u8981\u6839\u636e\u9879\u76ee\u9700\u6c42\uff0c\u6216\u8005\u5bfb\u627e\u6298\u4e2d\u7684\u65b9\u6cd5\u800c\u4e24\u8005\u517c\u987e\u3002\\r\\n\\r\\n\\r\\n### 2-4 Action\\r\\n\\r\\n\u6211\u76ee\u524d\u8fd8\u6ca1\u6709\u627e\u5230Action\u7684\u5408\u9002\u573a\u666f\u3002\u5b83\u548cControl\u4e00\u6837\u7684\uff0c\u5728V6\u7248\u672c\u4e2d\u662f\u5185\u7f6e\u63d2\u4ef6\uff0c\u9700\u8981argTypes\u6765\u5b9a\u4e49\uff0c\u65b0\u7248\u672cV6\u4e2d\u9700\u8981\u5199\u6210template\u5f62\u5f0f\u624d\u80fd\u89e6\u53d1\u3002\\r\\n\\r\\n<video controls=\\"controls\\" autoPlay=\\"autoplay\\" loop=\\"loop\\" style={{width: \'100%\'}}>\\r\\n    <source src=\\"https://storybook.js.org/b0366940cf7195b6d5b646c6105c217c/addon-actions-optimized.mp4\\" type=\\"video/mp4\\"/>\\r\\n</video>\\r\\n\\r\\n```jsx\\r\\nimport { Button } from \'./Button\';\\r\\n\\r\\nexport default {\\r\\n  title: \'Button\',\\r\\n  component: Button,\\r\\n  argTypes: { onClick: { action: \'clicked\' } },\\r\\n};\\r\\n\\r\\n```\\r\\n\\r\\n```jsx\\r\\n// .storybook/preview.js\\r\\n\\r\\nexport const parameters = {\\r\\n  actions: { argTypesRegex: \'^on.*\' }\\r\\n}\\r\\n\\r\\n```\\r\\n\\r\\n### 2-5 Using parameters\\r\\n\\r\\nParameters are Storybook\u2019s method of defining static metadata for stories. \\r\\nA story\u2019s parameters can be used to provide configuration to various addons at the level of a story or group of stories.\\r\\n\\r\\nParameters\u4e3b\u8981\u662f\u4e3astories\u505a\u4e00\u4e9b\u9875\u9762\u914d\u7f6e, \u4e5f\u53ef\u4ee5\u5728preview\u4e2d\u8fdb\u884cglobal\u7684\u914d\u7f6e\\r\\n\\r\\n```jsx\\r\\n  parameters: {\\r\\n    docs: { page: null },\\r\\n    actions: { argTypesRegex: \'^on.*\' },\\r\\n    centered: { disable: true },\\r\\n    backgrounds: {\\r\\n      values: [\\r\\n        { name: \'red\', value: \'#f00\' },\\r\\n        { name: \'green\', value: \'#0f0\' },\\r\\n        { name: \'blue\', value: \'#00f\' },\\r\\n      ],\\r\\n    },\\r\\n  },\\r\\n```\\r\\n\\r\\n### 2-6 Using decorators\\r\\n\\r\\nDecorators are a mechanism to wrap a component in arbitrary markup when rendering a story. \\r\\nComponents are often created with assumptions about \u2018where\u2019 they render. \\r\\nYour styles might expect a theme or layout wrapper, or your UI might expect specific context or data providers.\\r\\n\\r\\ndecorators\u5c31\u662f\u9875\u9762\u88c5\u9970\uff0c\u53ef\u4ee5\u6709\u673a\u4f1a\u7ed9\u9875\u9762\u505a\u4e00\u4e9bdom\u7ed3\u6784\u6216\u8005\u6837\u5f0f\u7684\u8c03\u6574\\r\\n\\r\\n```jsx\\r\\nimport React from \'react\';\\r\\nimport { Button } from \'./Button\';\\r\\n\\r\\nexport default {\\r\\n  title: \'Button\',\\r\\n  component: Button,\\r\\n  decorators: [\\r\\n    (Story) => (\\r\\n      <div style={{ margin: \'3em\' }}>\\r\\n        <Story />\\r\\n      </div>\\r\\n    ),\\r\\n  ],\\r\\n};\\r\\n```\\r\\n\\r\\n## 3. Write Docs\\r\\n\\r\\nStorybook \u76ee\u524d\u4e3b\u8981\u63d0\u4f9b\u4e86\u4e09\u79cd\u65b9\u5f0f\u7528\u4e8e\u6587\u6863\u7684\u4e66\u5199\\r\\n\\r\\n\\r\\n### 3-1 \u5229\u7528component parameters\\r\\n#### \u4f18\u70b9\uff1a\\r\\n- \u53ef\u4ee5\u81ea\u52a8\u89e3\u6790\u7ec4\u4ef6\u4e2d\u7684props\\r\\n#### \u7f3a\u70b9\uff1a\\r\\n- interface\u7684format\u8981\u4e25\u683c\\r\\n- docs\u4e2d\u4e0d\u80fd\u81ea\u5b9a\u4e49\uff0c\u662f\u81ea\u52a8\u751f\u6210\u7684\\r\\n\\r\\n\\r\\n```jsx\\r\\n// ButtonGroup.stories.js|jsx\\r\\nimport React from \'react\';\\r\\nimport { Button, ButtonGroup } from \'./ButtonGroup\';\\r\\n\\r\\nexport default {\\r\\n  title: \'ButtonGroup\',\\r\\n  // storybook use the component/subcomponents to extract the component\'s description and props\\r\\n  // override the docs.page parameters with null to remove its content\\r\\n  component: ButtonGroup,\\r\\n  subcomponents: { Button },\\r\\n};\\r\\n```\\r\\n\\r\\n### 3-2 mdx\\r\\n\\r\\n:::note\\r\\n- Currently there\'s an issue when using MDX stories with IE11. This issue does not apply to Docs page\\r\\n:::\\r\\n\\r\\nMDX \u662f\u975e\u5e38\u597d\u7684\u4e66\u5199docs\u7684\u65b9\u5f0f\uff0c\u5982\u679c\u4f60\u7684\u9879\u76ee\u4e0d\u9700\u8981\u517c\u5bb9IE11\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u4f60\u7528mdx\u7684\u65b9\u5f0f\u6765\u5199case\u7684\u6587\u6863\u3002\\r\\n#### \u4f18\u70b9\uff1a\\r\\n- \u53ef\u4ee5\u5c06md\u548cJSX\u6df7\u5408\u4e66\u5199\uff0c\u975e\u5e38\u7075\u6d3b\\r\\n#### \u7f3a\u70b9\uff1a\\r\\n- \u4e0d\u652f\u6301IE11\\r\\n\\r\\n[\u8be6\u7ec6](https://storybook.js.org/docs/react/writing-docs/mdx)\\r\\n\\r\\nMDX is a standard file format that combines Markdown with JSX. \\r\\nIt means you can use Markdown\u2019s terse syntax (such as # heading) for your documentation, \\r\\nwrite stories that compile to our component story format, and freely embed JSX component blocks at any point in the file. All at once.\\r\\n\\r\\n\\r\\n### 3-3 \u5229\u7528docs parameters\\r\\n\\r\\n\u56e0\u4e3aIE11\u800c\u7528\u4e0d\u4e86mdx\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7528jsx\u7ec4\u4ef6\u914d\u7f6e\u5230docs.page\u7684\u65b9\u5f0f\u8fdb\u884cdocs\u7684\u4e66\u5199\u3002\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u5982\u679c\u4f60\u7684\u9879\u76ee\u652f\u6301IE11\uff0c\u800c\u4e14\u4f60\u8fd8\u5e0c\u671b\u81ea\u5b9a\u4e49docs\u5185\u5bb9\uff0c\\r\\n\u7528\u8fd9\u79cd\u65b9\u5f0f\u662f\u6700\u597d\u9009\u62e9\\r\\n\\r\\n#### \u4f18\u70b9\uff1a\\r\\n- \u53ef\u4ee5\u5199JSX\uff0c\u81ea\u5b9a\u4e49docs\u9875\u9762\u5e03\u5c40\u6837\u5f0f\\r\\n- \u652f\u6301IE11\\r\\n#### \u7f3a\u70b9\uff1a\\r\\n- \u4e0d\u80fd\u7528md\\r\\n\\r\\n```jsx\\r\\n// ButtonGroup.stories.js|jsx\\r\\nimport React from \'react\';\\r\\nimport { Button, ButtonGroup } from \'./ButtonGroup\';\\r\\nimport { customDocumentComponemt } from \'./customDocumentComponemt\'; //jsx file\\r\\n\\r\\nexport default {\\r\\n  title: \'ButtonGroup\',\\r\\n  component: ButtonGroup,\\r\\n  parameters: {\\r\\n    docs: {\\r\\n      page: customDocumentComponemt\\r\\n    }\\r\\n  }\\r\\n};\\r\\n```"}]}')}}]);